{"version":3,"sources":["context/AppContext/AppContext.js","utils/IndexedDB/indexedDBValidation.js","utils/IndexedDB/indexedDBManagement.js","helper/FilterPeopleByName.js","components/SearchBox/SearchBox.js","components/AppHead/AppHead.js","helper/createFileURL.js","helper/findPersonByID.js","components/PersonOptions/PersonOptions.js","components/Person/Person.js","components/EmptyBox/EmptyBox.js","components/DeletePersonDialog/DeletePersonDialog.js","helper/removePersonFromFavourites.js","components/AddPersonUIInfo/AddPersonUIInfo.js","components/EditPersonUIControls/EditPersonUIControls.js","helper/validatePicture.js","components/PictureInput/PictureInput.js","assets/no-picture.png","components/PersonImgContainer/PersonImgContainer.js","components/EditPersonUI/EditPersonUI.js","components/Modal/Modal.js","helper/validatePersonData.js","components/AddPersonUIControls/AddPersonUIControls.js","components/AddPersonUI/AddPersonUI.js","components/PersonList/PersonList.js","components/HomeMain/HomeMain.js","helper/sortingLogic.js","components/MobileNav/MobileNav.js","utils/reducer.js","utils/data.js","utils/defaultState.js","components/DarkBackground/DarkBackground.js","components/App/App.js","index.js"],"names":["AppContext","createContext","accesDB","database","version","a","myDB","openDB","upgrade","oldVersion","newVersion","transaction","createObjectStore","keyPath","console","log","getIDBStore","store","tx","myStore","objectStore","putItemToIDB","item","accessedStore","put","getDataFromIDBStore","getAll","data","removeDataFromIDBStore","key","delete","blobToArrayBuffer","blob","Promise","resolve","reject","reader","FileReader","addEventListener","e","result","readAsArrayBuffer","FilterPeopleByName","people","name","dispatch","showFavourites","type","payload","filter","person","personName","toLowerCase","includes","SearchBox","setShowSearchBox","useContext","favState","searchInput","useRef","changeHandler","current","value","closeBtnClickHandler","className","placeholder","onChange","ref","onClick","AppHead","useState","showSearchBox","createFileURL","file","File","Blob","URL","createObjectURL","Error","findPersonByID","id","find","PersonOptions","currentPersonID","setCurrentPersonID","state","backgroundState","showEditPersonUIState","setShowBackground","setShowEditPersonUI","isPersonInFavourites","favourites","some","addToFavoritesHandler","removeFromFavouritesHandler","newFavourites","stopPropagation","setHandlerFunction","setTimeout","editClickHandler","Person","props","removeItemHandler","selectPersonHandler","birthday","picture","parentClassName","onKeyPress","keyPressHandler","tabIndex","src","pictureURL","err","getURL","alt","EmptyBox","toggleAddPersonUIHandlerForLargerScreen","aria-hidden","DeletePersonDialog","setShowDeletePersonDialog","removeItem","deletionUserID","deleteBtnClickHandler","target","textContent","RemovePersonFromFavourites","AddPersonUIINfo","nameContainer","dateContainer","formattedBirthday","split","reverse","join","maxLength","defaultValue","EditPersonUIControls","handleAcceptClick","validatePicture","pictureType","ArrayBuffer","PictureInput","setDidUserUploadPicture","setCurrentPicture","htmlFor","accept","files","hidden","PersonImgContainer","currentPicture","EditPersonUI","defaultState","currentPersonIDForEdit","didUserUploadPicture","changeEditedPersonFromFavourites","editedPerson","filteredFavourites","createEditedPerson","newName","newBirthday","blankImg","filteredPeople","newPeople","Modal","isTimePassed","setIsTimePassed","useEffect","modalHandler","modalContent","validatePersonData","date","length","regex2","test","dateValidation","AddPersonUIControls","addPersonHandler","AddPersonUI","showAddPersonUIHandler","validationResult","addPerson","charAt","toUpperCase","slice","newPerson","createNewPerson","Date","getTime","toString","PersonList","showUI","showDeletePersonDialog","showEditPersonUI","setDeletionUserID","showAddPersonUI","setShowAddPersonUI","personList","keyHandler","window","removeEventListener","isModalOpen","oldPeople","removePersonFromFavourites","map","HomeMain","setShowUI","sortingLogic","sortState","sortedPeople","sort","prev","cur","prevDay","prevMonth","prevYear","curDay","curMonth","curYear","sortByAge","sortByMonth","prevName","curName","charCodeAt","sortByName","MobileNav","showAddPersonUIState","setShowFavourites","showBackground","setSortState","reducer","action","getData","modalContext","DarkBackground","document","body","style","overflow","App","useReducer","getInitialData","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f297a85e.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport const AppContext = createContext(null);\r\n","import { openDB } from 'idb';\r\nasync function accesDB(database, version) {\r\n  let myDB = null;\r\n  try {\r\n    myDB = await openDB(database, version, {\r\n      upgrade(database, oldVersion, newVersion, transaction) {\r\n        database.createObjectStore('people', { keyPath: 'id' });\r\n        database.createObjectStore('favourites', { keyPath: 'id' });\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    return;\r\n  }\r\n\r\n  return myDB;\r\n}\r\n\r\nasync function getIDBStore(database, version, store) {\r\n  let myDB = null;\r\n  try {\r\n    myDB = await accesDB(database, version);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  const tx = myDB.transaction(store, 'readwrite');\r\n  const myStore = tx.objectStore(store);\r\n  return myStore;\r\n}\r\n\r\nexport {accesDB, getIDBStore};","import { getIDBStore } from './indexedDBValidation';\r\nasync function putItemToIDB(item, database, version, store) {\r\n  try {\r\n    const accessedStore = await getIDBStore(database, version, store);\r\n    await accessedStore.put(item);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getDataFromIDBStore(database, version, store) {\r\n  try {\r\n    const accessedStore = await getIDBStore(database, version, store);\r\n    const data = await accessedStore.getAll();\r\n    return data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n async function removeDataFromIDBStore(database, version, store, key) {\r\n  try {\r\n    const accessedStore = await getIDBStore(database, version, store);\r\n    accessedStore.delete(key);\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n} \r\n\r\nfunction arrayBufferToBlob(buffer, type) {\r\n  return new Blob([buffer], { type: type });\r\n}\r\n\r\nfunction blobToArrayBuffer(blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('loadend', (e) => {\r\n      resolve(reader.result);\r\n    });\r\n    reader.addEventListener('error', reject);\r\n    reader.readAsArrayBuffer(blob);\r\n  });\r\n}\r\n\r\nexport { putItemToIDB, getDataFromIDBStore, removeDataFromIDBStore, blobToArrayBuffer, arrayBufferToBlob };\r\n","function FilterPeopleByName(people, name, dispatch, showFavourites) {\r\n  const filteredPeople = people.filter((person) => {\r\n    const personName = person.name.toLowerCase();\r\n    name = name.toLowerCase();\r\n    return personName.includes(name);\r\n  });\r\n\r\n  const type = showFavourites\r\n    ? 'FILTER_FAVOURITES_BY_NAME'\r\n    : 'FILTER_PEOPLE_BY_NAME';\r\n\r\n  dispatch({ type: type, payload: filteredPeople });\r\n}\r\n\r\n\r\n\r\nexport default FilterPeopleByName;\r\n","import { useRef, useContext } from 'react';\r\nimport './SearchBox.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport { getDataFromIDBStore } from '../../utils/IndexedDB/indexedDBManagement';\r\nimport FilterPeopleByName from '../../helper/FilterPeopleByName';\r\n\r\nfunction SearchBox({ setShowSearchBox }) {\r\n  const { dispatch, favState } = useContext(AppContext);\r\n  const [showFavourites] = favState;\r\n  const searchInput = useRef(null);\r\n\r\n  const changeHandler = async () => {\r\n    const name = searchInput.current.value;\r\n    let people = null;\r\n    if (showFavourites) {\r\n      people = await getDataFromIDBStore('userDatabase', '1', 'favourites');\r\n    } else {\r\n      people = await getDataFromIDBStore('userDatabase', '1', 'people');\r\n    }\r\n    if (people) {\r\n      FilterPeopleByName(people, name, dispatch, showFavourites);\r\n    } else {\r\n      console.log('Data could not found!');\r\n    }\r\n  };\r\n\r\n  const closeBtnClickHandler = async () => {\r\n    setShowSearchBox(false);\r\n    let people = null;\r\n    let name = '';\r\n    if (showFavourites) {\r\n      people = await getDataFromIDBStore('userDatabase', '1', 'favourites');\r\n    } else {\r\n      people = await getDataFromIDBStore('userDatabase', '1', 'people');\r\n    }\r\n    if (people) {\r\n      FilterPeopleByName(people, name, dispatch, showFavourites);\r\n    } else {\r\n      console.log('Data could not found!');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"search-box\">\r\n      <input\r\n        className=\"search-box__search-input\"\r\n        type=\"search\"\r\n        placeholder=\"Search by name\"\r\n        onChange={changeHandler}\r\n        ref={searchInput}\r\n      />\r\n      <button className=\"search-box__close-btn\" onClick={closeBtnClickHandler}>\r\n        <i className=\"far fa-times-circle\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import { useState } from 'react';\r\nimport './AppHead.scss';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\n\r\nfunction AppHead() {\r\n  const [showSearchBox, setShowSearchBox] = useState(false);\r\n\r\n  return (\r\n    <header className=\"app-head\">\r\n      <nav className=\"app-head-nav\">\r\n        {(showSearchBox && <SearchBox setShowSearchBox = {setShowSearchBox} />) || (\r\n          <button\r\n            className=\"app-head-nav__search-btn\"\r\n            onClick={() => setShowSearchBox(!showSearchBox)}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        )}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHead;\r\n","function createFileURL(file) {\r\n  if (file instanceof File || file instanceof Blob) {\r\n    const url = URL.createObjectURL(file);\r\n    return url;\r\n  } else if (\r\n    typeof file === 'string' &&\r\n    (file.includes('.png') || file.includes('.jpeg') || file.includes('.jpg'))\r\n  )\r\n    return file;\r\n  throw Error(\r\n    'Input must be a File, String (includes .png, .jpeg or .jpg), or Blob object.'\r\n  );\r\n}\r\n\r\nexport default createFileURL;\r\n","function findPersonByID(people, id) {\r\n  return people.find((person) => person.id === id);\r\n}\r\n\r\nexport default findPersonByID;\r\n","import './PersonOptions.scss';\r\nimport { useContext } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport findPersonByID from '../../helper/findPersonByID';\r\nimport {\r\n  putItemToIDB,\r\n  removeDataFromIDBStore,\r\n} from '../../utils/IndexedDB/indexedDBManagement';\r\n\r\nfunction PersonOptions({ currentPersonID, setCurrentPersonID }) {\r\n  const {\r\n    state,\r\n    dispatch,\r\n    backgroundState,\r\n    showEditPersonUIState,\r\n  } = useContext(AppContext);\r\n  const person = findPersonByID(state.people, currentPersonID);\r\n  const [, setShowBackground] = backgroundState;\r\n  const [, setShowEditPersonUI] = showEditPersonUIState;\r\n  const isPersonInFavourites = () => {\r\n    // Prevents the person from being added to favourites again.\r\n    return state.favourites.some((person) => person.id === currentPersonID);\r\n  };\r\n\r\n  const editClickHandler = (e) => {\r\n    e.stopPropagation();\r\n    setShowEditPersonUI(true);\r\n    setTimeout(() => setCurrentPersonID(null), 0);\r\n  };\r\n\r\n  const addToFavoritesHandler = () => {\r\n    dispatch({\r\n      type: 'ADD_FAVOURITE',\r\n      payload: [...state.favourites, person],\r\n    });\r\n    putItemToIDB(person, 'userDatabase', '1', 'favourites');\r\n    setCurrentPersonID(null);\r\n  };\r\n\r\n  const removeFromFavouritesHandler = () => {\r\n    const newFavourites = state.favourites.filter(\r\n      (person) => person.id !== currentPersonID\r\n    );\r\n    dispatch({\r\n      type: 'REMOVE_FAVOURITE',\r\n      payload: newFavourites,\r\n    });\r\n    removeDataFromIDBStore('userDatabase', '1', 'favourites', currentPersonID);\r\n    setCurrentPersonID(null);\r\n  };\r\n\r\n  const setHandlerFunction = (e) => {\r\n    e.stopPropagation();\r\n    setShowBackground(false);\r\n    return isPersonInFavourites()\r\n      ? removeFromFavouritesHandler\r\n      : addToFavoritesHandler;\r\n  };\r\n\r\n  const setText = () => {\r\n    return isPersonInFavourites()\r\n      ? 'Remove from favourites'\r\n      : 'Add to favourites';\r\n  };\r\n  return (\r\n    <div className=\"person-options-container\">\r\n      <p className=\"person-options-container__name\">Person: {person.name}</p>\r\n      <ul className=\"person-options-list\">\r\n        <li className=\"person-options-list__item\">\r\n          <button\r\n            className=\"person-options-list__btn\"\r\n            onClick={(e) => setHandlerFunction(e)()}\r\n          >\r\n            {setText()}\r\n          </button>\r\n        </li>\r\n        <hr className=\"person-options-list__line\" />\r\n        <li className=\"person-options-list__item\">\r\n          <button\r\n            className=\"person-options-list__btn\"\r\n            onClick={(e) => editClickHandler(e)}\r\n          >\r\n            Edit\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonOptions;\r\n","import './Person.scss';\r\nimport createFileURL from '../../helper//createFileURL';\r\nimport PersonOptions from '../PersonOptions/PersonOptions';\r\nimport { arrayBufferToBlob } from '../../utils/IndexedDB/indexedDBManagement';\r\nfunction Person(props) {\r\n  const {\r\n    person,\r\n    removeItemHandler,\r\n    currentPersonID,\r\n    setCurrentPersonID,\r\n    selectPersonHandler,\r\n  } = props;\r\n  const { id, name, birthday, picture } = person;\r\n\r\n  const getURL = () => {\r\n    let pictureURL = null;\r\n    try {\r\n      if (typeof picture !== 'string') {\r\n        const blob = arrayBufferToBlob(picture);\r\n        pictureURL = createFileURL(blob);\r\n      } else {\r\n        pictureURL = picture;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    return pictureURL;\r\n  };\r\n  let parentClassName =\r\n    currentPersonID === id ? 'person person--highlighted' : 'person';\r\n  const keyPressHandler = (e) => {\r\n    if (e.key === 'Enter' && !currentPersonID) selectPersonHandler(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={parentClassName}\r\n      onKeyPress={(e) => keyPressHandler(e)}\r\n      onClick={() => selectPersonHandler(id)}\r\n      tabIndex={1}\r\n    >\r\n      {currentPersonID === id && (\r\n        <PersonOptions\r\n          currentPersonID={currentPersonID}\r\n          setCurrentPersonID={setCurrentPersonID}\r\n        />\r\n      )}\r\n      <div className=\"person-img-container\">\r\n        <img className=\"person-img-container__img\" src={getURL()} alt={name} />\r\n      </div>\r\n      <div className=\"person-info\">\r\n        <p className=\"person-info__name\">{name}</p>\r\n        <p className=\"person-info__birthday\">{birthday}</p>\r\n      </div>\r\n      <div className=\"person-controls\">\r\n        <button\r\n          className=\"person-controls__remove-btn\"\r\n          onClick={(e) => {\r\n            removeItemHandler(e, id);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Person;\r\n","import './EmptyBox.scss';\r\nfunction EmptyBox({ toggleAddPersonUIHandlerForLargerScreen }) {\r\n  return (\r\n    <div\r\n      className=\"empty-box\"\r\n      tabIndex={1}\r\n      onClick={toggleAddPersonUIHandlerForLargerScreen}\r\n    >\r\n      <div className=\"empty-box__icon-container\">\r\n        <i className=\"fa fa-plus empty-box__add-icon\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyBox;\r\n","import './DeletePersonDialog.scss';\r\nfunction DeletePersonDialog({\r\n  setShowDeletePersonDialog,\r\n  removeItem,\r\n  deletionUserID,\r\n}) {\r\n  const deleteBtnClickHandler = (e) => {\r\n    const btnText = e.target.textContent;\r\n    if (btnText === 'Yes') {\r\n      removeItem(deletionUserID);\r\n    }\r\n    setShowDeletePersonDialog(false);\r\n  };\r\n  return (\r\n    <div className=\"delete-person-dialog\">\r\n      <p className=\"delete-person-dialog__text\">\r\n        Are you really want to delete this person?\r\n      </p>\r\n      <div className=\"delete-person-dialog-controls\">\r\n        <button\r\n          className=\"delete-person-dialog-controls__btn\"\r\n          onClick={deleteBtnClickHandler}\r\n        >\r\n          Yes\r\n        </button>\r\n        <button\r\n          className=\"delete-person-dialog-controls__btn delete-person-dialog-controls__btn--no-margin\"\r\n          onClick={deleteBtnClickHandler}\r\n        >\r\n          No\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeletePersonDialog;\r\n","import { removeDataFromIDBStore } from '../utils/IndexedDB/indexedDBManagement';\r\n\r\nfunction RemovePersonFromFavourites(id, favourites) {\r\n  let newFavourites = favourites.filter((person) => person.id !== id);\r\n  removeDataFromIDBStore('userDatabase', '1', 'favourites', id);\r\n  return newFavourites;\r\n}\r\n\r\nexport default RemovePersonFromFavourites;\r\n","import './AddPersonUIInfo.scss';\r\n\r\nfunction AddPersonUIINfo(props) {\r\n  const { nameContainer, dateContainer, name, birthday } = props;\r\n  let formattedBirthday = null;\r\n  if (birthday) {\r\n    formattedBirthday = birthday.split('.').reverse().join('-');\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-person-ui-info-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"add-person-ui-info-container__name\"\r\n        ref={nameContainer}\r\n        maxLength=\"15\"\r\n        placeholder=\"Name\"\r\n        defaultValue={name || ''}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"add-person-ui-info-container__birthday\"\r\n        ref={dateContainer}\r\n        defaultValue={formattedBirthday || ''}\r\n        maxLength=\"10\"\r\n        placeholder=\"dd/mm/yyyy\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPersonUIINfo;\r\n","import './EditPersonUIControls.scss';\r\nfunction EditPersonUIControls({ handleAcceptClick }) {\r\n  return (\r\n    <div className=\"edit-person-ui-controls\">\r\n      <button\r\n        className=\"edit-person-ui-controls__accept-btn\"\r\n        onClick={(e)=>handleAcceptClick(e)}\r\n      >\r\n        <i\r\n          className=\"fas fa-check-circle edit-person-ui-controls__icon\"\r\n          aria-hidden={true}\r\n        ></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPersonUIControls;\r\n","const validatePicture = (picture) => {\r\n  try {\r\n    if (typeof picture === 'string') return true;\r\n    const pictureType = picture.type;\r\n    return (\r\n      // If user doesn't choose any picture, picture will be \"no-picture.png\" (URL as string).\r\n      pictureType === 'image/jpeg' || pictureType === 'image/png' || picture instanceof ArrayBuffer\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default validatePicture;\r\n","import { useContext } from 'react';\r\nimport validatePicture from '../../helper/validatePicture';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport './PictureInput.scss';\r\nfunction PictureInput({ setDidUserUploadPicture, setCurrentPicture }) {\r\n  const { dispatch } = useContext(AppContext);\r\n  const fileInputHandler = (e) => {\r\n    const picture = e.target.files[0];\r\n    if (validatePicture(picture)) {\r\n      setDidUserUploadPicture(true);\r\n      setCurrentPicture(picture);\r\n    } else {\r\n      dispatch({ type: 'INVALID_FILE_TYPE' });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"picture-input-container\">\r\n      <label htmlFor=\"picture\" className=\"picture-input-container__label\">\r\n        <i\r\n          className=\"fas fa-camera picture-input-container__icon\"\r\n          aria-hidden={true}\r\n        ></i>\r\n      </label>\r\n      <input\r\n        id=\"picture\"\r\n        type=\"file\"\r\n        className=\"picture-input-container__picture\"\r\n        accept=\"image/png, image/jpeg\"\r\n        onChange={fileInputHandler}\r\n        hidden={true}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PictureInput;\r\n","export default __webpack_public_path__ + \"static/media/no-picture.2fda6558.png\";","import './PersonImgContainer.scss';\r\nfunction PersonImgContainer({ createFileURL, currentPicture, nameContainer }) {\r\n  return (\r\n    <div className=\"person-img-container\">\r\n      <img\r\n        className=\"person-img-container__img\"\r\n        src={createFileURL(currentPicture)}\r\n        alt={nameContainer.current.value}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonImgContainer;\r\n","import AddPersonUIInfo from '../AddPersonUIInfo/AddPersonUIInfo';\r\nimport EditPersonUIControls from '../EditPersonUIControls/EditPersonUIControls';\r\nimport PictureInput from '../PictureInput/PictureInput';\r\nimport { useContext, useRef, useState } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport findPersonByID from '../../helper/findPersonByID';\r\nimport './EditPersonUI.scss';\r\nimport { putItemToIDB } from '../../utils/IndexedDB/indexedDBManagement';\r\nimport blankImg from '../../assets/no-picture.png';\r\nimport PersonImgContainer from '../PersonImgContainer/PersonImgContainer';\r\nimport createFileURL from '../../helper/createFileURL';\r\nfunction EditPersonUI({\r\n  currentPersonID,\r\n  setCurrentPersonID,\r\n  setShowEditPersonUI,\r\n  setShowBackground,\r\n}) {\r\n  const defaultState = currentPersonID;\r\n  const nameContainer = useRef(null);\r\n  const dateContainer = useRef(null);\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [currentPersonIDForEdit] = useState(defaultState);\r\n  const [currentPicture, setCurrentPicture] = useState(null);\r\n  const [didUserUploadPicture, setDidUserUploadPicture] = useState(false);\r\n  const person = findPersonByID(state.people, currentPersonIDForEdit);\r\n  const handleAcceptClick = (e) => {\r\n    e.stopPropagation();\r\n    const newName = nameContainer.current.value;\r\n    const newBirthday = dateContainer.current.value;;\r\n    const editedPerson = createEditedPerson(\r\n      newName,\r\n      newBirthday,\r\n      currentPicture || blankImg\r\n    );\r\n    const filteredPeople = state.people.filter(\r\n      (person) => person.id !== currentPersonIDForEdit\r\n    );\r\n    const newPeople = [...filteredPeople, editedPerson];\r\n    const newFavourites = changeEditedPersonFromFavourites(editedPerson);\r\n    putItemToIDB(editedPerson, 'userDatabase', '1', 'people');\r\n    putItemToIDB(editedPerson, 'userDatabase', '1', 'favourites');\r\n    dispatch({\r\n      type: 'EDIT_PERSON',\r\n      payload: {\r\n        people: newPeople,\r\n        favourites: newFavourites || state.favourites,\r\n      },\r\n    });\r\n    setShowBackground(false);\r\n    setShowEditPersonUI(false);\r\n  };\r\n\r\n  const changeEditedPersonFromFavourites = (editedPerson) => {\r\n    let newFavourites = null;\r\n    if (findPersonByID(state.favourites, currentPersonIDForEdit)) {\r\n      const filteredFavourites = state.favourites.filter(\r\n        (person) => person.id !== currentPersonIDForEdit\r\n      );\r\n      newFavourites = [...filteredFavourites, editedPerson];\r\n      return newFavourites;\r\n    }\r\n  };\r\n\r\n  const createEditedPerson = (name, birthday, picture) => {\r\n    const editedPerson = {\r\n      id: currentPersonIDForEdit,\r\n      name: name,\r\n      birthday: birthday,\r\n      picture: picture,\r\n    };\r\n    return editedPerson;\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-person-ui\">\r\n      {didUserUploadPicture ? (\r\n        <PersonImgContainer\r\n          createFileURL={createFileURL}\r\n          currentPicture={currentPicture}\r\n          nameContainer={nameContainer}\r\n        />\r\n      ) : (\r\n        <PictureInput\r\n          setDidUserUploadPicture={setDidUserUploadPicture}\r\n          setCurrentPicture={setCurrentPicture}\r\n        />\r\n      )}\r\n\r\n      <AddPersonUIInfo\r\n        name={person.name}\r\n        birthday={person.birthday}\r\n        currentPersonID={currentPersonID}\r\n        nameContainer={nameContainer}\r\n        dateContainer={dateContainer}\r\n      />\r\n      <EditPersonUIControls handleAcceptClick={handleAcceptClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPersonUI;\r\n","import { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport './Modal.scss';\r\n\r\nfunction Modal({ isTimePassed, setIsTimePassed }) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const clearModal = () => {\r\n    dispatch({ type: 'REMOVE_MODAL' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTimePassed) {\r\n      setIsTimePassed(false);\r\n      setTimeout(modalHandler, 2500);\r\n    }\r\n  });\r\n  const modalHandler = () => {\r\n    clearModal();\r\n    setIsTimePassed(true);\r\n  };\r\n  return <p className=\"modal\">{state.modalContent}</p>;\r\n}\r\n\r\nexport default Modal;\r\n","import validatePicture from './validatePicture';\r\nconst validatePersonData = (name, date, picture) => {\r\n  if (name.length <= 0) return 'INVALID_NAME';\r\n  else if (!dateValidation(date)) return 'INVALID_DATE';\r\n  else if (!validatePicture(picture)) return 'INVALID_FILE_TYPE';\r\n  return true;\r\n};\r\n\r\nfunction dateValidation(date) {\r\n  let regex = /\\d\\d(\\.|-|\\/)\\d\\d(\\.|-|\\/)\\d\\d\\d\\d/;\r\n  let regex2 = /\\d\\d\\d\\d(\\.|-|\\/)\\d\\d(\\.|-|\\/)\\d\\d/;\r\n  return regex.test(date) || regex2.test(date);\r\n}\r\n\r\nexport default validatePersonData;\r\n","import './AddPersonUIControls.scss';\r\nfunction AddPersonUIControls({ addPersonHandler }) {\r\n  return (\r\n    <div className=\"add-person-ui-controls\">\r\n      <button\r\n        className=\"add-person-ui-controls__add-btn\"\r\n        onClick={() => {\r\n          addPersonHandler();\r\n        }}\r\n      >\r\n        <i\r\n          className=\"fa fa-plus-circle add-person-ui-controls__icon\"\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPersonUIControls;\r\n","import { useContext, useRef, useState } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport './AddPersonUI.scss';\r\nimport blankImg from '../../assets/no-picture.png';\r\nimport {\r\n  putItemToIDB,\r\n  blobToArrayBuffer,\r\n} from '../../utils/IndexedDB/indexedDBManagement';\r\nimport PictureInput from '../PictureInput/PictureInput';\r\nimport createFileURL from '../../helper/createFileURL';\r\nimport validatePersonData from '../../helper/validatePersonData';\r\nimport AddPersonUIControls from '../AddPersonUIControls/AddPersonUIControls';\r\nimport AddPersonUIINfo from '../AddPersonUIInfo/AddPersonUIInfo';\r\nimport PersonImgContainer from '../PersonImgContainer/PersonImgContainer';\r\nfunction AddPersonUI({ showAddPersonUIHandler }) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [didUserUploadPicture, setDidUserUploadPicture] = useState(false);\r\n  const [currentPicture, setCurrentPicture] = useState(null);\r\n  const nameContainer = useRef(null);\r\n  const dateContainer = useRef(null);\r\n\r\n  const addPersonHandler = async () => {\r\n    let name = nameContainer.current.value;\r\n    const date = dateContainer.current.value;\r\n    let picture = currentPicture\r\n      ? await blobToArrayBuffer(currentPicture)\r\n      : blankImg;\r\n    const validationResult = validatePersonData(name, date, picture);\r\n    switch (validationResult) {\r\n      case 'INVALID_NAME':\r\n      case 'INVALID_DATE':\r\n      case 'INVALID_FILE_TYPE':\r\n        dispatch({ type: validationResult });\r\n        break;\r\n      default:\r\n        addPerson(name, date, picture);\r\n        showAddPersonUIHandler();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const addPerson = (name, birthday, picture) => {\r\n    name = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const newPerson = createNewPerson(name, birthday, picture);\r\n    dispatch({ type: 'ADD_ITEM', payload: [...state.people, newPerson] });\r\n    putItemToIDB(newPerson, 'userDatabase', '1', 'people');\r\n  };\r\n\r\n  const createNewPerson = (name, birthday, picture) => {\r\n    const newPerson = {\r\n      id: new Date().getTime().toString(),\r\n      name: name,\r\n      birthday: birthday,\r\n      picture: picture,\r\n    };\r\n    return newPerson;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-person-ui\">\r\n        {didUserUploadPicture ? (\r\n          <PersonImgContainer\r\n            createFileURL={createFileURL}\r\n            currentPicture={currentPicture}\r\n            nameContainer={nameContainer}\r\n          />\r\n        ) : (\r\n          <PictureInput\r\n            setDidUserUploadPicture={setDidUserUploadPicture}\r\n            currentPicture={currentPicture}\r\n            setCurrentPicture={setCurrentPicture}\r\n          />\r\n        )}\r\n        <AddPersonUIINfo\r\n          nameContainer={nameContainer}\r\n          dateContainer={dateContainer}\r\n        />\r\n        <AddPersonUIControls addPersonHandler={addPersonHandler} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddPersonUI;\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport Person from '../Person/Person';\r\nimport EmptyBox from '../EmptyBox/EmptyBox';\r\nimport './PersonList.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport DeletePersonDialog from '../DeletePersonDialog/DeletePersonDialog';\r\nimport { removeDataFromIDBStore } from '../../utils/IndexedDB/indexedDBManagement';\r\nimport removePersonFromFavourites from '../../helper/removePersonFromFavourites';\r\nimport EditPersonUI from '../EditPersonUI/EditPersonUI';\r\nimport Modal from '../Modal/Modal';\r\nimport AddPersonUI from '../AddPersonUI/AddPersonUI';\r\n\r\nfunction PersonList(props) {\r\n  const { currentPersonID, setCurrentPersonID, showUI } = props;\r\n  const {\r\n    state,\r\n    dispatch,\r\n    favState,\r\n    backgroundState,\r\n    showEditPersonUIState,\r\n  } = useContext(AppContext);\r\n  const [showFavourites] = favState;\r\n  const [showDeletePersonDialog, setShowDeletePersonDialog] = useState(false);\r\n  const [showEditPersonUI, setShowEditPersonUI] = showEditPersonUIState;\r\n  const [deletionUserID, setDeletionUserID] = useState(null);\r\n  const [, setShowBackground] = backgroundState;\r\n  const [isTimePassed, setIsTimePassed] = useState(true);\r\n  const [showAddPersonUI, setShowAddPersonUI] = useState(false);\r\n  const personList = showFavourites ? state.favourites : state.people;\r\n  const removeItemHandler = (e, id) => {\r\n    e.stopPropagation();\r\n    setShowDeletePersonDialog(true);\r\n    setDeletionUserID(id);\r\n  };\r\n  const showAddPersonUIHandler = () => {\r\n    setShowAddPersonUI(!showAddPersonUI);\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    const oldPeople = state.people;\r\n    const newFavourites = removePersonFromFavourites(id, state.favourites);\r\n    let newPeople = oldPeople.filter((person) => person.id !== id);\r\n    removeDataFromIDBStore('userDatabase', '1', 'people', id);\r\n    dispatch({\r\n      type: 'REMOVE_ITEM',\r\n      payload: { people: newPeople, favourites: newFavourites },\r\n    });\r\n    setShowBackground(false);\r\n  };\r\n\r\n  const selectPersonHandler = (id) => {\r\n    setShowBackground(true);\r\n    if (currentPersonID !== id && showUI) {\r\n      setCurrentPersonID(id);\r\n    }\r\n  };\r\n\r\n  const toggleAddPersonUIHandlerForLargerScreen = () => {\r\n    setShowAddPersonUI(!showAddPersonUI);\r\n  };\r\n\r\n  const keyHandler = (e) => {\r\n    if (e.key === 'Escape') {\r\n      setCurrentPersonID(null);\r\n      setShowBackground(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPersonID) {\r\n      window.addEventListener('keyup', keyHandler);\r\n    } else {\r\n      window.removeEventListener('keyup', keyHandler);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {state.isModalOpen && (\r\n        <Modal isTimePassed={isTimePassed} setIsTimePassed={setIsTimePassed} />\r\n      )}\r\n      {showDeletePersonDialog && (\r\n        <DeletePersonDialog\r\n          setShowDeletePersonDialog={setShowDeletePersonDialog}\r\n          removeItem={removeItem}\r\n          deletionUserID={deletionUserID}\r\n        />\r\n      )}\r\n      <ul className=\"person-list\">\r\n        {personList.map((person) => (\r\n          <Person\r\n            key={person.id}\r\n            person={person}\r\n            removeItemHandler={removeItemHandler}\r\n            currentPersonID={currentPersonID}\r\n            setCurrentPersonID={setCurrentPersonID}\r\n            selectPersonHandler={selectPersonHandler}\r\n            setShowBackground={setShowBackground}\r\n          />\r\n        ))}\r\n        {(showAddPersonUI && (\r\n          <AddPersonUI showAddPersonUIHandler={showAddPersonUIHandler} />\r\n        )) || (\r\n          <EmptyBox\r\n            toggleAddPersonUIHandlerForLargerScreen={\r\n              toggleAddPersonUIHandlerForLargerScreen\r\n            }\r\n          />\r\n        )}\r\n      </ul>\r\n      {showEditPersonUI && (\r\n        <EditPersonUI\r\n          currentPersonID={currentPersonID}\r\n          setCurrentPersonID={setCurrentPersonID}\r\n          setShowEditPersonUI={setShowEditPersonUI}\r\n          setShowBackground={setShowBackground}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PersonList;\r\n","import PersonList from '../PersonList/PersonList';\r\nimport './HomeMain.scss';\r\n\r\nfunction HomeMain(props) {\r\n  const {\r\n    showUI,\r\n    setShowUI,\r\n    currentPersonID,\r\n    setCurrentPersonID,\r\n  } = props;\r\n  return (\r\n    <main className=\"home-main\">\r\n      <PersonList\r\n        currentPersonID={currentPersonID}\r\n        setCurrentPersonID={setCurrentPersonID}\r\n        showUI={showUI}\r\n        setShowUI={setShowUI}\r\n      />\r\n    </main>\r\n  );\r\n}\r\nexport default HomeMain;\r\n","function sortingLogic({ state, dispatch, sortState, showFavourites }) {\r\n  const people = (showFavourites && state.favourites) || state.people;\r\n  if (sortState === 'sortByAge') {\r\n    sortByAge(people, dispatch, showFavourites);\r\n  } else if (sortState === 'sortByMonth') {\r\n    sortByMonth(people, dispatch, showFavourites);\r\n  } else if (sortState === 'sortByName') {\r\n    sortByName(people, dispatch, showFavourites);\r\n  }\r\n}\r\n\r\n// People sorting could be merged into a single function in the future.\r\nfunction sortByAge(oldPeople, dispatch, showFavourites) {\r\n  const sortedPeople = oldPeople.sort((prev, cur) => {\r\n    const [prevDay, prevMonth, prevYear] = prev.birthday.split('.');\r\n    const [curDay, curMonth, curYear] = cur.birthday.split('.');\r\n    const prevDateInMs = new Date(prevYear, prevMonth, prevDay).getTime();\r\n    const curDateInMs = new Date(curYear, curMonth, curDay).getTime();\r\n    return prevDateInMs - curDateInMs;\r\n  });\r\n  if (showFavourites) {\r\n    dispatch({ type: 'SORT_FAVOURITES_BY_AGE', payload: sortedPeople });\r\n  } else {\r\n    dispatch({\r\n      type: 'SORT_PEOPLE_BY_AGE',\r\n      payload: sortedPeople,\r\n    });\r\n  }\r\n}\r\n\r\nfunction sortByMonth(oldPeople, dispatch, showFavourites) {\r\n  const sortedPeople = oldPeople.sort((prev, cur) => {\r\n    const [prevDay, prevMonth] = prev.birthday.split('.');\r\n    const [curDay, curMonth] = cur.birthday.split('.');\r\n    const prevDatePoint = +prevDay + +prevMonth * 10;\r\n    const curDatePoint = +curDay + +curMonth * 10;\r\n    return prevDatePoint - curDatePoint;\r\n  });\r\n  if (showFavourites) {\r\n    dispatch({ type: 'SORT_FAVOURITES_BY_MONTH', payload: sortedPeople });\r\n  } else {\r\n    dispatch({ type: 'SORT_PEOPLE_BY_MONTH', payload: sortedPeople });\r\n  }\r\n}\r\n\r\nfunction sortByName(oldPeople, dispatch, showFavourites) {\r\n  const sortedPeople = oldPeople.sort((prev, cur) => {\r\n    const [prevName] = prev.name;\r\n    const [curName] = cur.name;\r\n    return prevName.charCodeAt(0) - curName.charCodeAt(0);\r\n  });\r\n  if (showFavourites) {\r\n    dispatch({ type: 'SORT_FAVOURITES_BY_NAME', payload: sortedPeople });\r\n  } else {\r\n    dispatch({ type: 'SORT_PEOPLE_BY_NAME', payload: sortedPeople });\r\n  }\r\n}\r\n\r\nexport default sortingLogic;\r\n","import AddPersonUI from '../AddPersonUI/AddPersonUI';\r\nimport { useState, useContext } from 'react';\r\nimport './MobileNav.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport sortingLogic from '../../helper/sortingLogic';\r\n\r\nfunction MobileNav() {\r\n  const {\r\n    state,\r\n    dispatch,\r\n    favState,\r\n    showAddPersonUIState,\r\n    backgroundState,\r\n  } = useContext(AppContext);\r\n  const [showAddPersonUI, setShowAddPersonUI] = showAddPersonUIState;\r\n  const [showFavourites, setShowFavourites] = favState;\r\n  const [showBackground, setShowBackground] = backgroundState;\r\n  const [sortState, setSortState] = useState('sortByAge');\r\n\r\n  const showAddPersonUIHandler = () => {\r\n    setShowBackground(!showBackground);\r\n    setShowAddPersonUI(!showAddPersonUI);\r\n  };\r\n\r\n  const sortingClickHandler = () => {\r\n    switch (sortState) {\r\n      case 'sortByAge':\r\n        setSortState('sortByName');\r\n        break;\r\n      case 'sortByName':\r\n        setSortState('sortByMonth');\r\n        break;\r\n      case 'sortByMonth':\r\n        setSortState('sortByAge');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    sortingLogic({state, dispatch, sortState, showFavourites});\r\n  };\r\n  return (\r\n    <>\r\n     \r\n      <nav className=\"mobile-nav\">\r\n        <button\r\n          className=\"mobile-nav__add-btn mobile-nav__add-btn--side\"\r\n          onClick={sortingClickHandler}\r\n        >\r\n          <i className=\"fas fa-sort-amount-down\"></i>\r\n        </button>\r\n        <button\r\n          className=\"mobile-nav__add-btn\"\r\n          onClick={showAddPersonUIHandler}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n\r\n        <button\r\n          className=\"mobile-nav__add-btn mobile-nav__add-btn--side\"\r\n          onClick={() => setShowFavourites(!showFavourites)}\r\n        >\r\n          <i className=\"fas fa-star\"></i>\r\n        </button>\r\n      </nav>\r\n      {showAddPersonUI && (\r\n        <AddPersonUI showAddPersonUIHandler={showAddPersonUIHandler} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MobileNav;\r\n","export const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return {\r\n        ...state,\r\n        people: action.payload,\r\n        isModalOpen: true,\r\n        modalContent: 'Person is added.',\r\n      };\r\n\r\n    case 'REMOVE_ITEM': {\r\n      const people = action.payload.people;\r\n      const favourites = action.payload.favourites;\r\n      return {\r\n        ...state,\r\n        people: people,\r\n        favourites: favourites,\r\n        isModalOpen: true,\r\n        modalContent: 'Person is removed.',\r\n      };\r\n    }\r\n    case 'REMOVE_MODAL': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: false,\r\n        modalContent: '',\r\n      };\r\n    }\r\n    case 'INVALID_NAME': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'Name input should includes at least one character.',\r\n      };\r\n    }\r\n    case 'INVALID_DATE': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'Please provide correct date format, (yyyy/mm/dd), or (dd/mm/yyyy) with any date seperators.',\r\n      };\r\n    }\r\n    case 'SORT_PEOPLE_BY_AGE': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'SORT BY AGE',\r\n      };\r\n    }\r\n    case 'SORT_PEOPLE_BY_MONTH': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'SORT BY MONTH',\r\n      };\r\n    }\r\n    case 'SORT_PEOPLE_BY_NAME': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'SORT BY NAME',\r\n      };\r\n    }\r\n    case 'SORT_FAVOURITES_BY_AGE': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'SORT BY AGE',\r\n        favourites: action.payload,\r\n      };\r\n    }\r\n    case 'SORT_FAVOURITES_BY_NAME': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'SORT BY AGE',\r\n        favourites: action.payload,\r\n      };\r\n    }\r\n    case 'SORT_FAVOURITES_BY_MONTH': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: 'SORT BY AGE',\r\n        favourites: action.payload,\r\n      };\r\n    }\r\n    case 'FILTER_PEOPLE_BY_NAME': {\r\n      return {\r\n        ...state,\r\n        people: action.payload,\r\n        isModalOpen: false,\r\n        modalContent: '',\r\n      };\r\n    }\r\n    case 'FILTER_FAVOURITES_BY_NAME': {\r\n      return {\r\n        ...state,\r\n        favourites: action.payload,\r\n        isModalOpen: false,\r\n        modalContent: '',\r\n      };\r\n    }\r\n    case 'INITIAL_LOAD': {\r\n      return {\r\n        ...state,\r\n        people: action.payload.people,\r\n        favourites: action.payload.favourites,\r\n        isModalOpen: false,\r\n        modalContent: '',\r\n      };\r\n    }\r\n    case 'INVALID_FILE_TYPE': {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent:\r\n          'Invalid file type. Please provide \".jpeg\", or \".png\" file for the picture.',\r\n      };\r\n    }\r\n    case 'ADD_FAVOURITE': {\r\n      const personName = action.payload[action.payload.length - 1].name;\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: `${personName} has been added to your favorites.`,\r\n        favourites: action.payload,\r\n      };\r\n    }\r\n    case 'REMOVE_FAVOURITE': {\r\n      const personName =\r\n        action.payload.length && action.payload[action.payload.length - 1].name;\r\n      const modalContent = personName\r\n        ? `${personName} has been removed from your favorites.`\r\n        : 'Favourites have been cleared.';\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: modalContent,\r\n        favourites: action.payload,\r\n      };\r\n    }\r\n    case 'EDIT_PERSON': {\r\n      const favourites = action.payload.favourites;\r\n      const personName = favourites[favourites.length - 1].name;\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        modalContent: `${personName}'s information has been changed.`,\r\n        people: action.payload.people,\r\n        favourites: favourites,\r\n      };\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import { getDataFromIDBStore } from './IndexedDB/indexedDBManagement';\r\n/* const data = [\r\n  {\r\n    id: 1,\r\n    name: 'Michael John',\r\n    birthday: '20.10.2021',\r\n    picture: './assets/man-1.png',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Niho Kerr',\r\n    birthday: '06.04.2021',\r\n    picture: './assets/girl-1.png',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'William Bloom',\r\n    birthday: '12.02.2021',\r\n    picture: './assets/man-2.png',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Derek Green',\r\n    birthday: '20.05.2021',\r\n    picture: './assets/man-3.png',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Lewis Milton',\r\n    birthday: '15.11.2021',\r\n    picture: './assets/man-4.png',\r\n  },\r\n];\r\n */\r\nasync function getData(database, version, store) {\r\n  try {\r\n    const data = await getDataFromIDBStore(\r\n      database,\r\n      version,\r\n      store\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default getData;\r\n","import getData from './data';\r\n\r\nasync function defaultState() {\r\n  const people = await getData(\"userDatabase\", \"1\", \"people\");\r\n  const favourites = await getData(\"userDatabase\", \"1\",\"favourites\");\r\n  const defaultState = {\r\n    people: people,\r\n    isModalOpen: false,\r\n    modalContext: '',\r\n    favourites: favourites\r\n  };\r\n  return defaultState;\r\n}\r\n\r\nexport default defaultState;\r\n","import './DarkBackground.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport { useEffect, useContext } from 'react';\r\nfunction DarkBackground(props) {\r\n  const { showAddPersonUIState, showEditPersonUIState } = useContext(\r\n    AppContext\r\n  );\r\n  const [showAddPersonUI, setShowAddPersonUI] = showAddPersonUIState;\r\n  const [showEditPersonUI, setShowEditPersonUI] = showEditPersonUIState;\r\n\r\n  const {\r\n    showBackground,\r\n    setShowBackground,\r\n    currentPersonID,\r\n    setCurrentPersonID,\r\n  } = props;\r\n  const backgroundHandler = (e) => {\r\n    if (currentPersonID || showAddPersonUI || showEditPersonUI) {\r\n      e.stopPropagation();\r\n      setShowBackground(false);\r\n      setShowEditPersonUI(false);\r\n      setShowAddPersonUI(false);\r\n      setCurrentPersonID(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    showBackground\r\n      ? (document.body.style.overflow = 'hidden')\r\n      : (document.body.style.overflow = 'initial');\r\n  }, [showBackground]);\r\n  const className = showBackground\r\n    ? 'dark-background dark-background--visible'\r\n    : 'dark-background';\r\n  return <div className={className} onClick={backgroundHandler}></div>;\r\n}\r\n\r\nexport default DarkBackground;\r\n","import AppHead from '../AppHead/AppHead';\r\nimport HomeMain from '../HomeMain/HomeMain';\r\nimport MobileNav from '../MobileNav/MobileNav';\r\nimport { useEffect, useReducer, useState } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport { reducer } from '../../utils/reducer';\r\nimport defaultState from '../../utils/defaultState';\r\nimport DarkBackground from '../DarkBackground/DarkBackground';\r\nfunction App() {\r\n  // Default state.\r\n  const def = {\r\n    people: [],\r\n    isModalOpen: false,\r\n    modalContent: '',\r\n    favourites: [],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, def);\r\n  const [showFavourites, setShowFavourites] = useState(false);\r\n  const [showUI, setShowUI] = useState(true);\r\n  const [currentPersonID, setCurrentPersonID] = useState(null);\r\n  const [showBackground, setShowBackground] = useState(false);\r\n  const [showAddPersonUI, setShowAddPersonUI] = useState(false);\r\n  const [showEditPersonUI, setShowEditPersonUI] = useState(false);\r\n  const showAddPersonUIState = [showAddPersonUI, setShowAddPersonUI];\r\n  const showEditPersonUIState = [showEditPersonUI, setShowEditPersonUI];\r\n  const backgroundState = [showBackground, setShowBackground];\r\n  const favState = [showFavourites, setShowFavourites];\r\n  \r\n  const getInitialData = async () => {\r\n    const data = await defaultState();\r\n    const people = data.people;\r\n    const favourites = data.favourites;\r\n\r\n    dispatch({\r\n      type: 'INITIAL_LOAD',\r\n      payload: { people: people, favourites: favourites },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInitialData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppContext.Provider\r\n        value={{\r\n          state: state,\r\n          dispatch: dispatch,\r\n          favState,\r\n          backgroundState,\r\n          showAddPersonUIState,\r\n          showEditPersonUIState\r\n        }}\r\n      >\r\n        <DarkBackground\r\n          showBackground={showBackground}\r\n          setShowBackground={setShowBackground}\r\n          currentPersonID={currentPersonID}\r\n          setCurrentPersonID={setCurrentPersonID}\r\n        />\r\n        <AppHead />\r\n        <HomeMain\r\n          showUI={showUI}\r\n          setShowUI={setShowUI}\r\n          currentPersonID={currentPersonID}\r\n          setCurrentPersonID={setCurrentPersonID}\r\n        />\r\n        <MobileNav />\r\n      </AppContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}