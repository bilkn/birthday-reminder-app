{"version":3,"sources":["context/AppContext/AppContext.js","context/PeopleListContext/PeopleListContext.js","helpers/filterPeopleByName.js","helpers/filterFavouritePeople.js","components/SearchBox/SearchBox.js","helpers/dateFormatValidations.js","helpers/reformatDate.js","helpers/sortingLogic.js","components/SortingSelectbox/SortingSelectbox.js","context/ScreenContext/ScreenContext.js","helpers/matchMinMedia.js","components/AppHead/AppHead.js","helpers/createFileURL.js","helpers/findPersonByID.js","utils/IndexedDB/indexedDBValidation.js","utils/IndexedDB/indexedDBManagement.js","components/PersonOptions/PersonOptions.js","helpers/getPersonAge.js","components/Person/Person.js","components/DeletePersonDialog/DeletePersonDialog.js","assets/no-picture.png","helpers/validatePicture.js","components/PictureInput/PictureInput.js","helpers/validatePersonData.js","helpers/dateValueValidations.js","components/AddPersonUIControls/AddPersonUIControls.js","components/AddPersonUIInfo/AddPersonUIInfo.js","components/PersonImgContainer/PersonImgContainer.js","components/AddPersonUI/AddPersonUI.js","components/AddPersonUILarge/AddPersonUILarge.js","components/EditPersonUIControls/EditPersonUIControls.js","components/EditPersonUI/EditPersonUI.js","components/Notification/Notification.js","components/PeopleList/PeopleList.js","components/HomeMain/HomeMain.js","helpers/handleSorting.js","components/MobileNav/MobileNav.js","components/DarkBackground/DarkBackground.js","providers/PeopleListProvider.js","utils/data.js","utils/defaultState.js","utils/reducer.js","providers/AppProvider.js","providers/ScreenProvider.js","components/App/App.js","index.js"],"names":["AppContext","createContext","PeopleListContext","filterPeopleByName","people","name","filter","person","personName","toLowerCase","includes","filterFavouritePeople","inFavourites","SearchBox","setShowSearchBox","useContext","favState","state","setPeopleList","showFavourites","searchInput","useRef","handleChange","a","current","value","displayPeople","filteredPeople","console","log","handleSearchBoxClose","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","className","type","placeholder","onChange","ref","autoFocus","aria-label","onClick","testDateWithCommonFormat","date","regex","result","test","testDateWithUncommonFormat","reformatDateSeperator","replace","validateAndReformatDate","newPrevBirthday","newCurBirthday","sortingLogic","args","peopleList","dispatch","nextSort","oldPeople","sortedPeople","sort","prev","cur","birthday","slice","split","prevDay","prevMonth","prevYear","curDay","curMonth","curYear","Date","getTime","sortByAge","sortByMonth","prevName","curName","charCodeAt","sortByName","SortingSelectbox","sortingState","sortState","setSortState","reformatValue","aria-selected","role","target","defaultValue","id","ScreenContext","matchMinMedia","size","matchMedia","matches","AppHead","setShowFavourites","useState","showSearchBox","isLargeScreen","setIsLargeScreen","style","color","aria-hidden","createFileURL","file","File","Blob","URL","createObjectURL","Error","findPersonByID","find","accesDB","database","version","myDB","openDB","upgrade","createObjectStore","keyPath","getIDBStore","store","tx","transaction","myStore","objectStore","putItemToIDB","item","accessedStore","put","getDataFromIDBStore","getAll","data","delete","blobToArrayBuffer","blob","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","PersonOptions","props","currentPersonID","setCurrentPersonID","handleDeletePerson","backgroundState","showEditPersonUIState","setShowBackground","setShowEditPersonUI","favText","setFavText","isPersonInFavourites","handleAddFavourites","modifiedPerson","payload","handleRemoveFavourites","onMouseEnter","dropDownBtn","document","querySelector","closest","handleMouseOut","relatedTarget","classList","contains","stopPropagation","setHandlerFunction","setTimeout","handleEdit","getPersonAge","length","reverse","difference","now","age_dt","Math","abs","getUTCFullYear","Person","handleSelectPerson","picture","dropdownBtnStyle","setDropdownBtnStyle","pictureURL","setPictureURL","parentClass","setParentClass","personAge","setPersonAge","tabindex","setTabindex","err","handleWindowKey","onKeyPress","tabIndex","height","width","handleMouseLeave","src","alt","DeletePersonDialog","setShowDeletePersonDialog","removeItem","deletionUserID","handleDelete","textContent","validatePicture","pictureType","ArrayBuffer","PictureInput","setDidUserUploadPicture","setCurrentPicture","label","focus","htmlFor","onKeyDown","click","accept","files","hidden","validatePersonData","dateValidation","dayValue","dayValidation","monthValue","monthValidation","yearValue","getFullYear","yearValidation","AddPersonUIControls","handleAddPerson","AddPersonUIINfo","nameContainer","dateContainer","maxLength","PersonImgContainer","currentPicture","AddPersonUI","toggleAddPersonUI","didUserUploadPicture","blankImg","validationResult","addPerson","charAt","toUpperCase","newPerson","createNewPerson","toString","AddPersonUILarge","handleAddPersonUIForLargerScreen","EditPersonUIControls","handleAcceptClick","EditPersonUI","defaultState","currentPersonIDForEdit","newName","newBirthday","editedPerson","createEditedPerson","newPeople","Notification","isTimePassed","setIsTimePassed","notificationCallback","notificationContent","PeopleList","setIsScreenLarge","showAddPersonUIState","showAddPersonUI","setShowAddPersonUI","showBackground","showEditPersonUI","showDeletePersonDialog","setDeletionUserID","isSorted","setIsSorted","handleKeyUp","handleResize","screenResult","isNotificationOpen","removeDataFromIDBStore","map","HomeMain","setShowUI","handleSorting","MobileNav","DarkBackground","body","overflow","PeopleListProvider","React","Provider","getData","notificationContext","reducer","action","AppProvider","useReducer","getInitialData","ScreenProvider","isScreenLarge","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.efe2bb46.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport const AppContext = createContext(null);\r\n","import { createContext } from 'react';\r\n const PeopleListContext = createContext(null);\r\nexport default PeopleListContext;\r\n","function filterPeopleByName(people, name) {\r\n  const filteredPeople = people.filter((person) => {\r\n    const personName = person.name.toLowerCase();\r\n    name = name.toLowerCase();\r\n    return personName.includes(name);\r\n  });\r\n  return filteredPeople;\r\n}\r\n\r\nexport default filterPeopleByName;\r\n","function filterFavouritePeople(people) {\r\n  return people.filter((person) => person.inFavourites);\r\n}\r\n\r\nexport default filterFavouritePeople;\r\n\r\n","import { useRef, useContext, useEffect } from 'react';\r\nimport './SearchBox.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport PeopleListContext from '../../context/PeopleListContext/PeopleListContext';\r\nimport filterPeopleByName from '../../helpers/filterPeopleByName';\r\nimport filterFavouritePeople from '../../helpers/filterFavouritePeople';\r\n\r\nfunction SearchBox({ setShowSearchBox }) {\r\n  const { favState, state } = useContext(AppContext);\r\n  const [, setPeopleList] = useContext(PeopleListContext);\r\n  const [showFavourites] = favState;\r\n  const searchInput = useRef(null);\r\n\r\n  const handleChange = async () => {\r\n    const name = searchInput.current.value;\r\n    displayPeople(name);\r\n  };\r\n\r\n  const displayPeople = (name) => {\r\n    let people = showFavourites\r\n      ? filterFavouritePeople(state.people)\r\n      : state.people;\r\n    if (people) {\r\n      const filteredPeople = filterPeopleByName(people, name);\r\n      setPeopleList(filteredPeople);\r\n    } else {\r\n      console.log('Data could not found!');\r\n    }\r\n  };\r\n\r\n  const handleSearchBoxClose = async () => {\r\n    let name = '';\r\n    setShowSearchBox(false);\r\n    displayPeople(name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Escape') handleSearchBoxClose();\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []); // !!! Fix this.\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <input\r\n        className=\"search-box__search-input\"\r\n        type=\"search\"\r\n        placeholder=\"Search by name\"\r\n        onChange={handleChange}\r\n        ref={searchInput}\r\n        autoFocus\r\n      />\r\n      <button\r\n        className=\"search-box__close-btn\"\r\n        aria-label=\"Search\"\r\n        onClick={handleSearchBoxClose}\r\n      >\r\n        <i className=\"far fa-times-circle\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","function testDateWithCommonFormat(date) {\r\n  const regex = /(\\d\\d)(\\.|-|\\/)(\\d\\d)(\\.|-|\\/)(\\d{4})/;\r\n  const result = regex.test(date);\r\n  return { result, regex };\r\n}\r\n\r\nfunction testDateWithUncommonFormat(date) {\r\n  const regex = /(\\d{4})(\\.|-|\\/)(\\d\\d)(\\.|-|\\/)(\\d\\d)/;\r\n  const result = regex.test(date);\r\n  return { result, regex };\r\n}\r\n\r\nexport { testDateWithCommonFormat, testDateWithUncommonFormat };\r\n","function reformatDateSeperator(date) {\r\n  return date.replace(/(\\.|-|\\/)/g, '.');\r\n}\r\n\r\nexport default reformatDateSeperator;\r\n","import {\r\n  testDateWithCommonFormat,\r\n  testDateWithUncommonFormat,\r\n} from './dateFormatValidations';\r\nimport reformatDateSeperator from './reformatDate';\r\n\r\nfunction sortingLogic(args) {\r\n  const {\r\n    peopleList,\r\n    dispatch,\r\n    nextSort,\r\n    setPeopleList,\r\n    showFavourites,\r\n  } = args;\r\n  const people = peopleList;\r\n  if (nextSort === 'sortByAge') {\r\n    sortByAge(people, dispatch, setPeopleList, showFavourites);\r\n  } else if (nextSort === 'sortByMonth') {\r\n    sortByMonth(people, dispatch, setPeopleList, showFavourites);\r\n  } else if (nextSort === 'sortByName') {\r\n    sortByName(people, dispatch, setPeopleList, showFavourites);\r\n  }\r\n}\r\n\r\nfunction sortByAge(oldPeople, dispatch, setPeopleList, showFavourites) {\r\n  const sortedPeople = oldPeople.sort((prev, cur) => {\r\n    let newPrevBirthday = prev.birthday.slice();\r\n    let newCurBirthday = cur.birthday.slice();\r\n    [newPrevBirthday, newCurBirthday] = validateAndReformatDate(\r\n      newPrevBirthday,\r\n      newCurBirthday\r\n    );\r\n    const [prevDay, prevMonth, prevYear] = newPrevBirthday.split('.');\r\n    const [curDay, curMonth, curYear] = newCurBirthday.split('.');\r\n    const prevDateInMs = new Date(prevYear, prevMonth, prevDay).getTime();\r\n    const curDateInMs = new Date(curYear, curMonth, curDay).getTime();\r\n    return prevDateInMs - curDateInMs;\r\n  });\r\n  if (showFavourites) {\r\n    const favouritePeople = sortedPeople.filter(\r\n      (person) => person.inFavourites\r\n    );\r\n    setPeopleList(favouritePeople);\r\n  } else {\r\n    setPeopleList(sortedPeople);\r\n  }\r\n  dispatch({ type: 'SORT_PEOPLE_BY_AGE' });\r\n}\r\n\r\nfunction sortByMonth(oldPeople, dispatch, setPeopleList, showFavourites) {\r\n  const sortedPeople = oldPeople.sort((prev, cur) => {\r\n    let newPrevBirthday = prev.birthday.slice();\r\n    let newCurBirthday = cur.birthday.slice();\r\n    [newPrevBirthday, newCurBirthday] = validateAndReformatDate(\r\n      newPrevBirthday,\r\n      newCurBirthday\r\n    );\r\n    const [prevDay, prevMonth] = newPrevBirthday.split('.');\r\n    const [curDay, curMonth] = newCurBirthday.split('.');\r\n    const prevDatePoint = +prevDay + +prevMonth * 10;\r\n    const curDatePoint = +curDay + +curMonth * 10;\r\n    return curDatePoint - prevDatePoint;\r\n  });\r\n  if (showFavourites) {\r\n    const favouritePeople = sortedPeople.filter(\r\n      (person) => person.inFavourites\r\n    );\r\n    setPeopleList(favouritePeople);\r\n  } else {\r\n    setPeopleList(sortedPeople);\r\n  }\r\n  dispatch({ type: 'SORT_PEOPLE_BY_MONTH' });\r\n}\r\n\r\nfunction sortByName(oldPeople, dispatch, setPeopleList, showFavourites) {\r\n  const sortedPeople = oldPeople.sort((prev, cur) => {\r\n    const [prevName] = prev.name.toLowerCase();\r\n    const [curName] = cur.name.toLowerCase();\r\n    return prevName.charCodeAt(0) - curName.charCodeAt(0);\r\n  });\r\n  if (showFavourites) {\r\n    const favouritePeople = sortedPeople.filter(\r\n      (person) => person.inFavourites\r\n    );\r\n    setPeopleList(favouritePeople);\r\n  } else {\r\n    setPeopleList(sortedPeople);\r\n  }\r\n  dispatch({ type: 'SORT_PEOPLE_BY_NAME' });\r\n}\r\n\r\n// Validates the date input value, and reformats the value, if it can be reformatted.\r\nfunction validateAndReformatDate(newPrevBirthday, newCurBirthday) {\r\n  const { regex } = testDateWithUncommonFormat(newPrevBirthday);\r\n\r\n  newPrevBirthday = testDateWithCommonFormat(newPrevBirthday).result\r\n    ? newPrevBirthday\r\n    : newPrevBirthday.replace(regex, '$5.$3.$1');\r\n\r\n  newCurBirthday = testDateWithCommonFormat(newCurBirthday).result\r\n    ? newCurBirthday\r\n    : newCurBirthday.replace(regex, '$5.$3.$1');\r\n\r\n  if (/-|\\//.test(newPrevBirthday)) {\r\n    newPrevBirthday = reformatDateSeperator(newPrevBirthday);\r\n  }\r\n  if (/-|\\//.test(newCurBirthday)) {\r\n    newCurBirthday = reformatDateSeperator(newCurBirthday);\r\n  }\r\n  return [newPrevBirthday, newCurBirthday];\r\n}\r\n\r\nexport default sortingLogic;\r\n","import React, { useContext } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport PeopleListContext from '../../context/PeopleListContext/PeopleListContext';\r\nimport sortingLogic from '../../helpers/sortingLogic';\r\nimport './SortingSelectbox.scss';\r\nfunction SortingSelectbox() {\r\n  const { dispatch, favState, sortingState } = useContext(AppContext);\r\n  const [peopleList, setPeopleList] = useContext(PeopleListContext);\r\n  const [showFavourites] = favState;\r\n  const [sortState, setSortState] = sortingState;\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const nextSort = reformatValue(value);\r\n    const args = {\r\n      peopleList,\r\n      setPeopleList,\r\n      nextSort,\r\n      showFavourites,\r\n      dispatch,\r\n    };\r\n    sortingLogic(args);\r\n    setSortState(nextSort);\r\n  };\r\n\r\n  const reformatValue = (value) => {\r\n    switch (value) {\r\n      case 'sort-by-name':\r\n        return 'sortByName';\r\n      case 'sort-by-age':\r\n        return 'sortByAge';\r\n      case 'sort-by-month':\r\n        return 'sortByMonth';\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <select className=\"sorting-selectbox\" aria-selected role=\"option\" onChange={handleChange}  defaultValue={sortState}> \r\n      <option\r\n        id=\"test\"\r\n        value=\"sort-by-name\"\r\n        className=\"sorting-selectbox__option\"\r\n      >\r\n        Sort by name\r\n      </option>\r\n      <option value=\"sort-by-age\" className=\"sorting-selectbox__option\">\r\n        Sort by age\r\n      </option>\r\n      <option value=\"sort-by-month\" className=\"sorting-selectbox__option\">\r\n        Sort by month\r\n      </option>\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default SortingSelectbox;\r\n","import { createContext } from 'react';\r\nconst ScreenContext = createContext(null);\r\nexport default ScreenContext;\r\n\r\n\r\n","function matchMinMedia(size) {\r\n  const mql = window.matchMedia(`(min-width: ${size}px)`);\r\n  return mql.matches;\r\n}\r\n\r\nexport default matchMinMedia;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport './AppHead.scss';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport SortingSelectbox from '../SortingSelectbox/SortingSelectbox';\r\nimport ScreenContext from '../../context/ScreenContext/ScreenContext';\r\nimport matchMinMedia from '../../helpers/matchMinMedia';\r\nfunction AppHead() {\r\n  const { favState } = useContext(AppContext);\r\n  const [showFavourites, setShowFavourites] = favState;\r\n  const [showSearchBox, setShowSearchBox] = useState(false);\r\n  const [isLargeScreen, setIsLargeScreen] = useContext(ScreenContext);\r\n\r\n  useEffect(() => {\r\n    if (matchMinMedia(769)) setIsLargeScreen(() => true);\r\n    else setIsLargeScreen(() => false);\r\n  }, [setIsLargeScreen]);\r\n  return (\r\n    <header className=\"app-head\">\r\n      {(isLargeScreen || !showSearchBox) && (\r\n        <h1 className=\"app-head__logo\">BirthdayReminder</h1>\r\n      )}\r\n\r\n      <nav className=\"app-head-nav\">\r\n        {(showSearchBox && (\r\n          <SearchBox setShowSearchBox={setShowSearchBox} />\r\n        )) || (\r\n          <>\r\n            <SortingSelectbox />\r\n            <button\r\n              className=\"app-head-nav__search-btn\"\r\n              aria-label=\"Search\"\r\n              onClick={() => setShowSearchBox(!showSearchBox)}\r\n            >\r\n              <i className=\"fas fa-search app-head-nav__icon\"></i>\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        <button\r\n          className=\"app-head-nav__fav-btn\"\r\n          onClick={() => !setShowFavourites(!showFavourites)}\r\n          style={{\r\n            color: showFavourites ? ' #dcd6f7' : '#c9c2e8',\r\n          }}\r\n          aria-label=\"Favourites\"\r\n        >\r\n          <i className=\"fa fa-star app-head-nav__icon\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHead;\r\n","function createFileURL(file) {\r\n  if (file instanceof File || file instanceof Blob) {\r\n    const url = URL.createObjectURL(file);\r\n    return url;\r\n  } else if (\r\n    typeof file === 'string' &&\r\n    (file.includes('.png') || file.includes('.jpeg') || file.includes('.jpg'))\r\n  )\r\n    return file;\r\n  throw Error(\r\n    'Input must be a File, String (includes .png, .jpeg or .jpg), or Blob object.'\r\n  );\r\n}\r\n\r\nexport default createFileURL;\r\n","function findPersonByID(people, id) {\r\n  return people.find((person) => person.id === id);\r\n}\r\n\r\nexport default findPersonByID;\r\n","import { openDB } from 'idb';\r\nasync function accesDB(database, version) {\r\n  let myDB = null;\r\n  try {\r\n    myDB = await openDB(database, version, {\r\n      upgrade(database) {\r\n        database.createObjectStore('people', { keyPath: 'id' });\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    return;\r\n  }\r\n\r\n  return myDB;\r\n}\r\n\r\nasync function getIDBStore(database, version, store) {\r\n  let myDB = null;\r\n  try {\r\n    myDB = await accesDB(database, version);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  const tx = myDB.transaction(store, 'readwrite');\r\n  const myStore = tx.objectStore(store);\r\n  return myStore;\r\n}\r\n\r\nexport { accesDB, getIDBStore };\r\n","import { getIDBStore } from './indexedDBValidation';\r\nasync function putItemToIDB(item, database, version, store) {\r\n  try {\r\n    const accessedStore = await getIDBStore(database, version, store);\r\n    await accessedStore.put(item);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getDataFromIDBStore(database, version, store) {\r\n  try {\r\n    const accessedStore = await getIDBStore(database, version, store);\r\n    const data = await accessedStore.getAll();\r\n    return data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n async function removeDataFromIDBStore(database, version, store, key) {\r\n  try {\r\n    const accessedStore = await getIDBStore(database, version, store);\r\n    accessedStore.delete(key);\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n} \r\n\r\nfunction arrayBufferToBlob(buffer, type) {\r\n  return new Blob([buffer], { type: type });\r\n}\r\n\r\nfunction blobToArrayBuffer(blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('loadend', (e) => {\r\n      resolve(reader.result);\r\n    });\r\n    reader.addEventListener('error', reject);\r\n    reader.readAsArrayBuffer(blob);\r\n  });\r\n}\r\n\r\nexport { putItemToIDB, getDataFromIDBStore, removeDataFromIDBStore, blobToArrayBuffer, arrayBufferToBlob };\r\n","import './PersonOptions.scss';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport findPersonByID from '../../helpers/findPersonByID';\r\nimport { putItemToIDB } from '../../utils/IndexedDB/indexedDBManagement';\r\nimport matchMinMedia from '../../helpers/matchMinMedia';\r\n\r\nfunction PersonOptions(props) {\r\n  const { currentPersonID, setCurrentPersonID, handleDeletePerson } = props;\r\n  const {\r\n    state,\r\n    dispatch,\r\n    backgroundState,\r\n    showEditPersonUIState,\r\n  } = useContext(AppContext);\r\n  const person = findPersonByID(state.people, currentPersonID);\r\n  const [, setShowBackground] = backgroundState;\r\n  const [, setShowEditPersonUI] = showEditPersonUIState;\r\n  const [favText, setFavText] = useState('');\r\n\r\n  const isPersonInFavourites = (person) => {\r\n    return person && person.inFavourites;\r\n  };\r\n\r\n  const handleEdit = (e) => {\r\n    e.stopPropagation();\r\n    setShowBackground(true);\r\n    setShowEditPersonUI(true);\r\n    setTimeout(() => setCurrentPersonID(null), 0);\r\n  };\r\n\r\n  const handleAddFavourites = () => {\r\n    const oldPeople = state.people.filter(\r\n      (person) => currentPersonID !== person.id\r\n    );\r\n    const modifiedPerson = {\r\n      ...person,\r\n      inFavourites: true,\r\n    };\r\n\r\n    dispatch({\r\n      type: 'ADD_FAVOURITE',\r\n      payload: {\r\n        people: [...oldPeople, modifiedPerson],\r\n        name: modifiedPerson.name,\r\n      },\r\n    });\r\n    putItemToIDB(modifiedPerson, 'userDatabase', '1', 'people');\r\n    setCurrentPersonID(null);\r\n  };\r\n\r\n  const handleRemoveFavourites = () => {\r\n    const oldPeople = state.people.filter(\r\n      (person) => person.id !== currentPersonID\r\n    );\r\n    const modifiedPerson = {\r\n      ...person,\r\n      inFavourites: false,\r\n    };\r\n    dispatch({\r\n      type: 'REMOVE_FAVOURITE',\r\n      payload: {\r\n        people: [...oldPeople, modifiedPerson],\r\n        name: modifiedPerson.name,\r\n      },\r\n    });\r\n    setCurrentPersonID(null);\r\n  };\r\n\r\n  const setHandlerFunction = (e) => {\r\n    e.stopPropagation();\r\n    setShowBackground(false);\r\n    return isPersonInFavourites(person)\r\n      ? handleRemoveFavourites\r\n      : handleAddFavourites;\r\n  };\r\n\r\n  const handleMouseOver = (e) => {\r\n    const dropDownBtn = document.querySelector(\".person__dropdown-btn\");\r\n    if (matchMinMedia(769)) {\r\n      const target = e.target.closest('div');\r\n      const handleMouseOut = (e) => {\r\n        setShowBackground(false);\r\n        const relatedTarget = e.relatedTarget;\r\n        if (\r\n          relatedTarget &&\r\n          !relatedTarget.classList.contains('person__dropdown-btn')\r\n        ) {\r\n          dropDownBtn.style = {};\r\n          setCurrentPersonID(null);\r\n          target.removeEventListener('mouseleave', handleMouseOut);\r\n        }\r\n      };\r\n      target.addEventListener('mouseleave', handleMouseOut);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isPersonInFavourites(person)\r\n      ? setFavText('Remove from favourites')\r\n      : setFavText('Add to favourites');\r\n  }, [person]);\r\n\r\n  return (\r\n    <div className=\"person-options-container\" onMouseEnter={handleMouseOver}>\r\n      <p className=\"person-options-container__name\">\r\n        Person: {person && person.name}\r\n      </p>\r\n      <ul className=\"person-options-list\">\r\n        <li className=\"person-options-list__item person-options-list__item--triangled\">\r\n          <button\r\n            className=\"person-options-list__btn\"\r\n            onClick={(e) => setHandlerFunction(e)()}\r\n          >\r\n            {favText}\r\n          </button>\r\n        </li>\r\n        <li className=\"person-options-list__item person-options-list__item--edit-btn\">\r\n          <button\r\n            className=\"person-options-list__btn\"\r\n            onClick={(e) => handleEdit(e)}\r\n          >\r\n            Edit\r\n          </button>\r\n        </li>\r\n        <li className=\"person-options-list__item person-options-list__item--delete-btn\">\r\n          <button\r\n            className=\"person-options-list__btn\"\r\n            onClick={(e) => handleDeletePerson(e, currentPersonID)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonOptions;\r\n","function getPersonAge(person) {\r\n  const regex = /(\\.|-|\\/)/;\r\n  let birthday = person.birthday\r\n    .split(regex)\r\n    .filter((item) => !regex.test(item));\r\n  if (birthday[0].length !== 4) {\r\n    birthday = birthday.reverse();\r\n  }\r\n  // Creates Date object with year, month and day values.\r\n  const date = new Date(birthday[0], birthday[1], birthday[2]);\r\n  var difference = Date.now() - date.getTime();\r\n  var age_dt = new Date(difference);\r\n  return Math.abs(age_dt.getUTCFullYear() - 1970);\r\n}\r\n\r\nexport default getPersonAge;\r\n","import './Person.scss';\r\nimport createFileURL from '../../helpers/createFileURL';\r\nimport PersonOptions from '../PersonOptions/PersonOptions';\r\nimport { arrayBufferToBlob } from '../../utils/IndexedDB/indexedDBManagement';\r\nimport { useEffect, useState } from 'react';\r\nimport getPersonAge from '../../helpers/getPersonAge';\r\nimport matchMinMedia from '../../helpers/matchMinMedia';\r\n\r\nfunction Person(props) {\r\n  const {\r\n    person,\r\n    handleDeletePerson,\r\n    currentPersonID,\r\n    setCurrentPersonID,\r\n    handleSelectPerson,\r\n  } = props;\r\n  const { id, name, birthday, picture } = person;\r\n  const [dropdownBtnStyle, setDropdownBtnStyle] = useState(null);\r\n  const [pictureURL, setPictureURL] = useState(null);\r\n  const [parentClass, setParentClass] = useState('');\r\n  const [personAge, setPersonAge] = useState(null);\r\n  const [tabindex, setTabindex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    let pictureURL = null;\r\n    try {\r\n      if (typeof picture !== 'string') {\r\n        const blob = arrayBufferToBlob(picture);\r\n        pictureURL = createFileURL(blob);\r\n      } else {\r\n        pictureURL = picture;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    setPictureURL(() => pictureURL);\r\n  }, [picture]);\r\n\r\n  useEffect(() => {\r\n    /*   document.q */\r\n    let parentClassName =\r\n      currentPersonID === id ? 'person person--highlighted' : 'person';\r\n    setParentClass(parentClassName);\r\n  }, [currentPersonID, id]);\r\n\r\n  useEffect(() => {\r\n    setPersonAge(getPersonAge(person));\r\n  }, [person]);\r\n\r\n  useEffect(() => {\r\n    if (!matchMinMedia(769)) setTabindex(-1);\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    if (!matchMinMedia(769)) handleSelectPerson(id);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') handleSelectPerson(id);\r\n  };\r\n\r\n  const handleWindowKey = (e) => {\r\n    if (e.key === 'Tab' && !matchMinMedia(769)) {\r\n      setTabindex(1);\r\n    } else if (e.key === 'Tab' && matchMinMedia(769)) {\r\n      setTabindex(-1);\r\n    }\r\n  };\r\n\r\n  // Handles person dropdown menu.\r\n  const handleMouseEnter = (e) => {\r\n    const target = e.target.closest('button');\r\n    handleSelectPerson(id);\r\n    const style = { height: '50px', width: '30px' };\r\n    setDropdownBtnStyle(style);\r\n    const handleMouseLeave = (e) => {\r\n      const relatedTarget = e.relatedTarget;\r\n      if (\r\n        relatedTarget &&\r\n        !relatedTarget.classList.contains('person-options-list__item')\r\n      ) {\r\n        setCurrentPersonID(null);\r\n        setDropdownBtnStyle(null);\r\n        target.removeEventListener('mouseleave', handleMouseLeave);\r\n      }\r\n    };\r\n    target.addEventListener('mouseleave', handleMouseLeave);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keyup', handleWindowKey);\r\n    return () => {\r\n      window.removeEventListener('keyup', handleWindowKey);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={parentClass}\r\n      onKeyPress={handleKeyPress}\r\n      onClick={handleClick}\r\n      tabIndex={tabindex}\r\n    >\r\n      <button\r\n        className=\"person__dropdown-btn\"\r\n        onMouseEnter={handleMouseEnter}\r\n        style={dropdownBtnStyle}\r\n        aria-label=\"Dropdown menu\"\r\n      >\r\n        <i className=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      {currentPersonID === id && (\r\n        <PersonOptions\r\n          currentPersonID={currentPersonID}\r\n          setCurrentPersonID={setCurrentPersonID}\r\n          handleDeletePerson={handleDeletePerson}\r\n        />\r\n      )}\r\n      <div className=\"person-img-container\">\r\n        <img\r\n          className=\"person-img-container__img\"\r\n          src={pictureURL}\r\n          alt={name}\r\n        />\r\n      </div>\r\n      <div className=\"person-info\">\r\n        <p className=\"person-info__name\">{name}</p>\r\n        <p className=\"person-info__birthday\">{birthday}</p>\r\n      </div>\r\n      <div className=\"person-age-container\">\r\n        <p className=\"person-age-container__title\">Age:</p>\r\n        <p className=\"person-age-container__age\">{personAge}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Person;\r\n","import { useContext } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport findPersonByID from '../../helpers/findPersonByID';\r\nimport './DeletePersonDialog.scss';\r\nfunction DeletePersonDialog(props) {\r\n  const {\r\n    setShowDeletePersonDialog,\r\n    removeItem,\r\n    deletionUserID,\r\n    setCurrentPersonID,\r\n  } = props;\r\n  const { backgroundState, state } = useContext(AppContext);\r\n  const [, setShowBackground] = backgroundState;\r\n\r\n  const handleDelete = (e) => {\r\n    e.stopPropagation();\r\n    const btnText = e.target.textContent;\r\n    \r\n    if (btnText === 'Yes') {\r\n      removeItem(deletionUserID);\r\n    }\r\n\r\n    setShowDeletePersonDialog(false);\r\n    setShowBackground(false);\r\n    setCurrentPersonID(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete-person-dialog\">\r\n      <p className=\"delete-person-dialog__text\">\r\n        {` Are you really want to delete ${\r\n          findPersonByID(state.people, deletionUserID).name\r\n        }?`}\r\n      </p>\r\n      <div className=\"delete-person-dialog-controls\">\r\n        <button\r\n          className=\"delete-person-dialog-controls__btn\"\r\n          onClick={handleDelete}\r\n          autoFocus\r\n        >\r\n          Yes\r\n        </button>\r\n        <button\r\n          className=\"delete-person-dialog-controls__btn delete-person-dialog-controls__btn--no-margin\"\r\n          onClick={handleDelete}\r\n        >\r\n          No\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeletePersonDialog;\r\n","export default __webpack_public_path__ + \"static/media/no-picture.2fda6558.png\";","const validatePicture = (picture) => {\r\n  try {\r\n    if (typeof picture === 'string') return true;\r\n    const pictureType = picture.type;\r\n    return (\r\n      // If user doesn't choose any picture, picture will be \"no-picture.png\" (URL as string).\r\n      pictureType === 'image/jpeg' || pictureType === 'image/png' || picture instanceof ArrayBuffer\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default validatePicture;\r\n","import { useContext, useEffect, useRef } from 'react';\r\nimport validatePicture from '../../helpers/validatePicture';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport './PictureInput.scss';\r\nfunction PictureInput({ setDidUserUploadPicture, setCurrentPicture }) {\r\n  const { dispatch } = useContext(AppContext);\r\n  const label = useRef(null);\r\n\r\n  const handleFile = (e) => {\r\n    const picture = e.target.files[0];\r\n    if (validatePicture(picture)) {\r\n      setDidUserUploadPicture(true);\r\n      setCurrentPicture(picture);\r\n    } else {\r\n      dispatch({ type: 'INVALID_FILE_TYPE' });\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.key === 'Enter') label.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    label.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"picture-input-container\">\r\n      <label\r\n        htmlFor=\"picture\"\r\n        className=\"picture-input-container__label\"\r\n        tabIndex={0}\r\n        ref={label}\r\n        onKeyDown={onKeyDown}\r\n      >\r\n        <i\r\n          className=\"fas fa-camera picture-input-container__icon\"\r\n          aria-hidden={true}\r\n        ></i>\r\n      </label>\r\n      <input\r\n        id=\"picture\"\r\n        type=\"file\"\r\n        className=\"picture-input-container__picture\"\r\n        accept=\"image/png, image/jpeg\"\r\n        onChange={handleFile}\r\n        hidden={true}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PictureInput;\r\n","import { testDateWithCommonFormat, testDateWithUncommonFormat } from './dateFormatValidations';\r\nimport { dayValidation, monthValidation, yearValidation } from './dateValueValidations';\r\nimport validatePicture from './validatePicture';\r\n\r\nconst validatePersonData = (name, date, picture) => {\r\n  if (name.length <= 0) return 'INVALID_NAME';\r\n  else if (!dateValidation(date)) return 'INVALID_DATE';\r\n  else if (!dayValidation(date)) return 'INVALID_DAY';\r\n  else if (!monthValidation(date)) return 'INVALID_MONTH';\r\n  else if (!yearValidation(date)) return 'INVALID_YEAR';\r\n  else if (!validatePicture(picture)) return 'INVALID_FILE_TYPE';\r\n  return true;\r\n};\r\n\r\nfunction dateValidation(date) {\r\n  return testDateWithCommonFormat(date).result || testDateWithUncommonFormat(date).result;\r\n}\r\n\r\n\r\nexport default validatePersonData;\r\n","import { testDateWithCommonFormat } from './dateFormatValidations';\r\n\r\nfunction dayValidation(date) {\r\n  const { result } = testDateWithCommonFormat(date);\r\n  const dayValue = result ? +date.slice(0, 2) : +date.slice(-2);\r\n  return dayValue <= 31 && dayValue > 0;\r\n}\r\n\r\nfunction monthValidation(date) {\r\n  const { result } = testDateWithCommonFormat(date);\r\n  const monthValue = result ? +date.slice(3, 5) : +date.slice(5, 7);\r\n  return monthValue <= 12 && monthValue > 0;\r\n}\r\n\r\nfunction yearValidation(date) {\r\n  const { result } = testDateWithCommonFormat(date);\r\n  const yearValue = result ? +date.slice(-4) : +date.slice(0, 4);\r\n  const currentYear = new Date().getFullYear();\r\n  return yearValue <= currentYear && yearValue > 1000;\r\n}\r\n\r\nexport { dayValidation, monthValidation, yearValidation };\r\n","import './AddPersonUIControls.scss';\r\nfunction AddPersonUIControls({ handleAddPerson }) {\r\n  return (\r\n    <div className=\"add-person-ui-controls\">\r\n      <button\r\n        className=\"add-person-ui-controls__add-btn\"\r\n        onClick={() => {\r\n          handleAddPerson();\r\n        }}\r\n      >\r\n        <i\r\n          className=\"fa fa-plus-circle add-person-ui-controls__icon\"\r\n          aria-hidden=\"true\"\r\n        ></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPersonUIControls;\r\n","import './AddPersonUIInfo.scss';\r\n\r\nfunction AddPersonUIINfo(props) {\r\n  const { nameContainer, dateContainer, name, birthday } = props;\r\n\r\n  return (\r\n    <div className=\"add-person-ui-info-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"add-person-ui-info-container__name\"\r\n        ref={nameContainer}\r\n        maxLength=\"15\"\r\n        placeholder=\"Name\"\r\n        defaultValue={name || ''}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        className=\"add-person-ui-info-container__birthday\"\r\n        ref={dateContainer}\r\n        defaultValue={birthday || ''}\r\n        maxLength=\"10\"\r\n        placeholder=\"dd/mm/yyyy\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPersonUIINfo;\r\n","import './PersonImgContainer.scss';\r\nfunction PersonImgContainer({ createFileURL, currentPicture, nameContainer }) {\r\n  return (\r\n    <div className=\"person-img-container\">\r\n      <img\r\n        className=\"person-img-container__img\"\r\n        src={createFileURL(currentPicture)}\r\n        alt={nameContainer.current.value}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonImgContainer;\r\n","import { useContext, useRef, useState } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport './AddPersonUI.scss';\r\nimport blankImg from '../../assets/no-picture.png';\r\nimport {\r\n  putItemToIDB,\r\n  blobToArrayBuffer,\r\n} from '../../utils/IndexedDB/indexedDBManagement';\r\nimport PictureInput from '../PictureInput/PictureInput';\r\nimport createFileURL from '../../helpers/createFileURL';\r\nimport validatePersonData from '../../helpers/validatePersonData';\r\nimport AddPersonUIControls from '../AddPersonUIControls/AddPersonUIControls';\r\nimport AddPersonUIINfo from '../AddPersonUIInfo/AddPersonUIInfo';\r\nimport PersonImgContainer from '../PersonImgContainer/PersonImgContainer';\r\nfunction AddPersonUI({ setShowBackground, toggleAddPersonUI }) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [didUserUploadPicture, setDidUserUploadPicture] = useState(false);\r\n  const [currentPicture, setCurrentPicture] = useState(null);\r\n  const nameContainer = useRef(null);\r\n  const dateContainer = useRef(null);\r\n\r\n  const handleAddPerson = async () => {\r\n    let name = nameContainer.current.value;\r\n    const date = dateContainer.current.value;\r\n\r\n    let picture = currentPicture\r\n      ? await blobToArrayBuffer(currentPicture)\r\n      : blankImg;\r\n    const validationResult = validatePersonData(name, date, picture);\r\n\r\n    switch (validationResult) {\r\n      case 'INVALID_NAME':\r\n      case 'INVALID_DATE':\r\n      case 'INVALID_DAY':\r\n      case 'INVALID_MONTH':\r\n      case 'INVALID_YEAR':\r\n      case 'INVALID_FILE_TYPE':\r\n        dispatch({ type: validationResult });\r\n        break;\r\n      default:\r\n        addPerson(name, date, picture);\r\n        toggleAddPersonUI();\r\n        setShowBackground(false);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const addPerson = (name, birthday, picture) => {\r\n    name = name.charAt(0).toUpperCase() + name.slice(1);\r\n    const newPerson = createNewPerson(name, birthday, picture);\r\n    dispatch({ type: 'ADD_PERSON', payload: [...state.people, newPerson] });\r\n    putItemToIDB(newPerson, 'userDatabase', '1', 'people');\r\n  };\r\n\r\n  const createNewPerson = (name, birthday, picture) => {\r\n    const newPerson = {\r\n      id: new Date().getTime().toString(),\r\n      name: name,\r\n      birthday: birthday,\r\n      picture: picture,\r\n      inFavourites: false,\r\n    };\r\n    return newPerson;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-person-ui\">\r\n        {didUserUploadPicture ? (\r\n          <PersonImgContainer\r\n            createFileURL={createFileURL}\r\n            currentPicture={currentPicture}\r\n            nameContainer={nameContainer}\r\n          />\r\n        ) : (\r\n          <PictureInput\r\n            setDidUserUploadPicture={setDidUserUploadPicture}\r\n            currentPicture={currentPicture}\r\n            setCurrentPicture={setCurrentPicture}\r\n          />\r\n        )}\r\n        <AddPersonUIINfo\r\n          nameContainer={nameContainer}\r\n          dateContainer={dateContainer}\r\n        />\r\n        <AddPersonUIControls handleAddPerson={handleAddPerson} />\r\n        <button\r\n          className=\"add-person-ui__close-btn\"\r\n          onClick={toggleAddPersonUI}\r\n        >\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddPersonUI;\r\n","import './AddPersonUILarge.scss';\r\nfunction AddPersonUILarge({ handleAddPersonUIForLargerScreen }) {\r\n  const handleClick = (e) => {\r\n    handleAddPersonUIForLargerScreen(e);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') handleAddPersonUIForLargerScreen(e);\r\n  };\r\n  return (\r\n    <li\r\n      className=\"add-person-ui-large\"\r\n      tabIndex={0}\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyDown}\r\n    >\r\n      <div className=\"add-person-ui-large__icon-container\">\r\n        <i className=\"fa fa-plus add-person-ui-large__add-icon\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default AddPersonUILarge;\r\n","import './EditPersonUIControls.scss';\r\nfunction EditPersonUIControls({ handleAcceptClick }) {\r\n  return (\r\n    <div className=\"edit-person-ui-controls\">\r\n      <button\r\n        className=\"edit-person-ui-controls__accept-btn\"\r\n        onClick={(e)=>handleAcceptClick(e)}\r\n      >\r\n        <i\r\n          className=\"fas fa-check-circle edit-person-ui-controls__icon\"\r\n          aria-hidden={true}\r\n        ></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPersonUIControls;\r\n","import AddPersonUIInfo from '../AddPersonUIInfo/AddPersonUIInfo';\r\nimport EditPersonUIControls from '../EditPersonUIControls/EditPersonUIControls';\r\nimport PictureInput from '../PictureInput/PictureInput';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport findPersonByID from '../../helpers/findPersonByID';\r\nimport './EditPersonUI.scss';\r\nimport {\r\n  blobToArrayBuffer,\r\n  putItemToIDB,\r\n} from '../../utils/IndexedDB/indexedDBManagement';\r\nimport blankImg from '../../assets/no-picture.png';\r\nimport PersonImgContainer from '../PersonImgContainer/PersonImgContainer';\r\nimport createFileURL from '../../helpers/createFileURL';\r\nimport validatePersonData from '../../helpers/validatePersonData';\r\nfunction EditPersonUI(props) {\r\n  const { currentPersonID, setShowEditPersonUI, setShowBackground } = props;\r\n  const defaultState = currentPersonID;\r\n  const nameContainer = useRef(null);\r\n  const dateContainer = useRef(null);\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [currentPersonIDForEdit] = useState(defaultState);\r\n  const [currentPicture, setCurrentPicture] = useState(null);\r\n  const [didUserUploadPicture, setDidUserUploadPicture] = useState(false);\r\n  const person = findPersonByID(state.people, currentPersonIDForEdit);\r\n\r\n  const handleAcceptClick = async (e) => {\r\n    e.stopPropagation();\r\n    const newName = nameContainer.current.value;\r\n    const newBirthday = dateContainer.current.value;\r\n    const picture = didUserUploadPicture ? currentPicture : person.picture;\r\n    let editedPerson = null;\r\n    try {\r\n      editedPerson = await createEditedPerson(newName, newBirthday, picture);\r\n    } catch (err) {\r\n      // Add notification.\r\n      console.log(err);\r\n    }\r\n    if (editedPerson) {\r\n      const filteredPeople = state.people.filter(\r\n        (person) => person.id !== currentPersonIDForEdit\r\n      );\r\n\r\n      const newPeople = [...filteredPeople, editedPerson];\r\n      putItemToIDB(editedPerson, 'userDatabase', '1', 'people');\r\n      dispatch({\r\n        type: 'EDIT_PERSON',\r\n        payload: {\r\n          people: newPeople,\r\n          name: editedPerson.name,\r\n        },\r\n      });\r\n      setShowBackground(false);\r\n      setShowEditPersonUI(false);\r\n    } else {\r\n      // !!! Add notification\r\n      console.log('EDIT PERSON ERROR!');\r\n    }\r\n  };\r\n\r\n  const createEditedPerson = async (name, birthday, picture) => {\r\n    const editedPerson = {\r\n      ...person,\r\n      id: currentPersonIDForEdit,\r\n      name: name,\r\n      birthday: birthday,\r\n      picture: picture,\r\n    };\r\n    picture = currentPicture\r\n      ? await blobToArrayBuffer(currentPicture)\r\n      : blankImg;\r\n    const validationResult = validatePersonData(name, birthday, picture);\r\n    switch (validationResult) {\r\n      case 'INVALID_NAME':\r\n      case 'INVALID_DATE':\r\n      case 'INVALID_DAY':\r\n      case 'INVALID_MONTH':\r\n      case 'INVALID_YEAR':\r\n      case 'INVALID_FILE_TYPE':\r\n        dispatch({ type: validationResult });\r\n        break;\r\n      default:\r\n        return editedPerson;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Escape') setShowEditPersonUI(false);\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [setShowEditPersonUI]);\r\n\r\n  return (\r\n    <div className=\"edit-person-ui\">\r\n      {didUserUploadPicture ? (\r\n        <PersonImgContainer\r\n          createFileURL={createFileURL}\r\n          currentPicture={currentPicture}\r\n          nameContainer={nameContainer}\r\n        />\r\n      ) : (\r\n        <PictureInput\r\n          setDidUserUploadPicture={setDidUserUploadPicture}\r\n          currentPicture={currentPicture}\r\n          setCurrentPicture={setCurrentPicture}\r\n        />\r\n      )}\r\n\r\n      <AddPersonUIInfo\r\n        name={person.name}\r\n        birthday={person.birthday}\r\n        currentPersonID={currentPersonID}\r\n        nameContainer={nameContainer}\r\n        dateContainer={dateContainer}\r\n      />\r\n      <EditPersonUIControls handleAcceptClick={handleAcceptClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPersonUI;\r\n","import { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport './Notification.scss';\r\n\r\nfunction Notification({ isTimePassed, setIsTimePassed }) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const clearNotification = () => {\r\n    dispatch({ type: 'REMOVE_MODAL' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTimePassed) {\r\n      setIsTimePassed(false);\r\n      setTimeout(notificationCallback, 2500);\r\n    }\r\n  });\r\n  const notificationCallback = () => {\r\n    clearNotification();\r\n    setIsTimePassed(true);\r\n  };\r\n  return <p className=\"notification\">{state.notificationContent}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport './PeopleList.scss';\r\nimport Person from '../Person/Person';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport PeopleListContext from '../../context/PeopleListContext/PeopleListContext';\r\nimport ScreenContext from '../../context/ScreenContext/ScreenContext';\r\nimport DeletePersonDialog from '../DeletePersonDialog/DeletePersonDialog';\r\nimport { removeDataFromIDBStore } from '../../utils/IndexedDB/indexedDBManagement';\r\nimport AddPersonUI from '../AddPersonUI/AddPersonUI';\r\nimport AddPersonUILarge from '../AddPersonUILarge/AddPersonUILarge';\r\nimport EditPersonUI from '../EditPersonUI/EditPersonUI';\r\nimport Notification from '../Notification/Notification';\r\nimport filterFavouritePeople from '../../helpers/filterFavouritePeople';\r\nimport sortingLogic from '../../helpers/sortingLogic';\r\nimport matchMinMedia from '../../helpers/matchMinMedia';\r\n\r\nfunction PeopleList(props) {\r\n  const { currentPersonID, setCurrentPersonID } = props;\r\n  const [peopleList, setPeopleList] = useContext(PeopleListContext);\r\n  const [, setIsScreenLarge] = useContext(ScreenContext);\r\n  const {\r\n    state,\r\n    dispatch,\r\n    favState,\r\n    backgroundState,\r\n    showEditPersonUIState,\r\n    showAddPersonUIState,\r\n  } = useContext(AppContext);\r\n  const [showAddPersonUI, setShowAddPersonUI] = showAddPersonUIState;\r\n  const [showFavourites] = favState;\r\n  const [showBackground, setShowBackground] = backgroundState;\r\n  const [showEditPersonUI, setShowEditPersonUI] = showEditPersonUIState;\r\n  const [showDeletePersonDialog, setShowDeletePersonDialog] = useState(false);\r\n  const [deletionUserID, setDeletionUserID] = useState(null);\r\n  const [isTimePassed, setIsTimePassed] = useState(true);\r\n  const [isSorted, setIsSorted] = useState(false);\r\n\r\n  const handleDeletePerson = (e, id) => {\r\n    if (!matchMinMedia(769)) {\r\n      setCurrentPersonID(null);\r\n    }\r\n    e.stopPropagation();\r\n    setShowDeletePersonDialog(true);\r\n    setDeletionUserID(id);\r\n  };\r\n  const toggleAddPersonUI = () => {\r\n    setShowAddPersonUI(() => !showAddPersonUI);\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    const oldPeople = state.people;\r\n    let newPeople = oldPeople.filter((person) => person.id !== id);\r\n    removeDataFromIDBStore('userDatabase', '1', 'people', id);\r\n    dispatch({\r\n      type: 'REMOVE_PERSON',\r\n      payload: { people: newPeople },\r\n    });\r\n\r\n    setShowBackground(false);\r\n  };\r\n\r\n  const handleSelectPerson = (id) => {\r\n    if (!matchMinMedia(769)) {\r\n      setShowBackground(true);\r\n    }\r\n\r\n    if (currentPersonID !== id) {\r\n      setCurrentPersonID(id);\r\n    }\r\n  };\r\n\r\n  const handleAddPersonUIForLargerScreen = () => {\r\n    setShowAddPersonUI(!showAddPersonUI);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyUp = (e) => {\r\n      if (e.key === 'Escape') {\r\n        setCurrentPersonID(null);\r\n        setShowBackground(false);\r\n        setShowAddPersonUI(() => false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keyup', handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, [setCurrentPersonID, setShowBackground, setShowAddPersonUI]);\r\n\r\n  useEffect(() => {\r\n    const people = showFavourites\r\n      ? filterFavouritePeople(state.people)\r\n      : state.people;\r\n    setPeopleList(people);\r\n  }, [showFavourites, state.people, setPeopleList]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      // Sets several states according to the screen size, and active UI's (media queries weren't enough).\r\n      const screenResult = matchMinMedia(769);\r\n      if (screenResult) {\r\n        setIsScreenLarge(() => true);\r\n      } else {\r\n        setIsScreenLarge(() => false);\r\n      }\r\n      if (\r\n        screenResult &&\r\n        (showAddPersonUI || currentPersonID || showDeletePersonDialog) &&\r\n        showBackground\r\n      ) {\r\n        setShowBackground(() => false);\r\n      } else if (\r\n        !screenResult &&\r\n        (showAddPersonUI || currentPersonID || showDeletePersonDialog) &&\r\n        !showBackground\r\n      ) {\r\n        setShowBackground(() => true);\r\n      }\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [\r\n    showBackground,\r\n    setShowBackground,\r\n    showAddPersonUI,\r\n    currentPersonID,\r\n    showDeletePersonDialog,\r\n    setIsScreenLarge,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (peopleList.length && !isSorted) {\r\n      const nextSort = 'sortByName';\r\n      const args = {\r\n        peopleList,\r\n        setPeopleList,\r\n        nextSort,\r\n        showFavourites,\r\n        dispatch,\r\n      };\r\n      sortingLogic(args);\r\n      setIsSorted(true);\r\n    }\r\n  }, [dispatch, peopleList, setPeopleList, isSorted, showFavourites]); // !!! May be changed in the future.\r\n  return (\r\n    <>\r\n      {state.isNotificationOpen && (\r\n        <Notification\r\n          isTimePassed={isTimePassed}\r\n          setIsTimePassed={setIsTimePassed}\r\n        />\r\n      )}\r\n      {showDeletePersonDialog && (\r\n        <DeletePersonDialog\r\n          setShowDeletePersonDialog={setShowDeletePersonDialog}\r\n          removeItem={removeItem}\r\n          deletionUserID={deletionUserID}\r\n          setCurrentPersonID={setCurrentPersonID}\r\n        />\r\n      )}\r\n      <ul className=\"people-list\">\r\n        {peopleList &&\r\n          peopleList.map((person) => (\r\n            <Person\r\n              key={person.id}\r\n              person={person}\r\n              handleDeletePerson={handleDeletePerson}\r\n              currentPersonID={currentPersonID}\r\n              setCurrentPersonID={setCurrentPersonID}\r\n              handleSelectPerson={handleSelectPerson}\r\n              setShowBackground={setShowBackground}\r\n            />\r\n          ))}\r\n        {(showAddPersonUI && (\r\n          <AddPersonUI\r\n            setShowBackground={setShowBackground}\r\n            toggleAddPersonUI={toggleAddPersonUI}\r\n          />\r\n        )) || (\r\n          <AddPersonUILarge\r\n            handleAddPersonUIForLargerScreen={handleAddPersonUIForLargerScreen}\r\n          />\r\n        )}\r\n      </ul>\r\n      {showEditPersonUI && (\r\n        <EditPersonUI\r\n          currentPersonID={currentPersonID}\r\n          setShowEditPersonUI={setShowEditPersonUI}\r\n          setShowBackground={setShowBackground}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PeopleList;\r\n","import { useContext } from 'react';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport PeopleList from '../PeopleList/PeopleList';\r\nimport './HomeMain.scss';\r\n\r\nfunction HomeMain(props) {\r\n  const { setShowUI } = props;\r\n  const { currentPersonID, setCurrentPersonID } = useContext(AppContext);\r\n\r\n  return (\r\n    <main className=\"home-main\">\r\n      <PeopleList\r\n        currentPersonID={currentPersonID}\r\n        setCurrentPersonID={setCurrentPersonID}\r\n        setShowUI={setShowUI}\r\n      />\r\n    </main>\r\n  );\r\n}\r\nexport default HomeMain;\r\n","function handleSorting(sortState) {\r\n  switch (sortState) {\r\n    case 'sortByName':\r\n      return 'sortByAge';\r\n    case 'sortByAge':\r\n      return 'sortByMonth';\r\n    case 'sortByMonth':\r\n      return 'sortByName';\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport default handleSorting;\r\n","import { useContext } from 'react';\r\nimport './MobileNav.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport sortingLogic from '../../helpers/sortingLogic';\r\nimport PeopleListContext from '../../context/PeopleListContext/PeopleListContext';\r\nimport handleSorting from '../../helpers/handleSorting';\r\n\r\nfunction MobileNav() {\r\n  const {\r\n    dispatch,\r\n    favState,\r\n    showAddPersonUIState,\r\n    backgroundState,\r\n    sortingState,\r\n  } = useContext(AppContext);\r\n  const [showAddPersonUI, setShowAddPersonUI] = showAddPersonUIState;\r\n  const [showFavourites, setShowFavourites] = favState;\r\n  const [showBackground, setShowBackground] = backgroundState;\r\n  const [sortState, setSortState] = sortingState;\r\n  const [peopleList, setPeopleList] = useContext(PeopleListContext);\r\n\r\n  const toggleAddPersonUI = () => {\r\n    setShowBackground(!showBackground);\r\n    setShowAddPersonUI(!showAddPersonUI);\r\n  };\r\n  const handleSortingClick = () => {\r\n    const nextSort = handleSorting(sortState);\r\n    const args = {\r\n      peopleList,\r\n      setPeopleList,\r\n      nextSort,\r\n      showFavourites,\r\n      dispatch,\r\n    };\r\n    sortingLogic(args);\r\n    setSortState(nextSort);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"mobile-nav\">\r\n        <button\r\n          className=\"mobile-nav__btn mobile-nav__btn--side\"\r\n          aria-label=\"Sort people list\"\r\n          onClick={handleSortingClick}\r\n        >\r\n          <i className=\"fas fa-sort-amount-down\"></i>\r\n        </button>\r\n        <button\r\n          className=\"mobile-nav__btn\"\r\n          aria-label=\"Add person\"\r\n          onClick={toggleAddPersonUI}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n\r\n        <button\r\n          className=\"mobile-nav__btn mobile-nav__btn--side\"\r\n          aria-label=\"Toggle favourites\"\r\n          onClick={() => setShowFavourites(!showFavourites)}\r\n        >\r\n          <i className=\"fas fa-star\"></i>\r\n        </button>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MobileNav;\r\n","import './DarkBackground.scss';\r\nimport { AppContext } from '../../context/AppContext/AppContext';\r\nimport { useEffect, useContext } from 'react';\r\nfunction DarkBackground() {\r\n  const {\r\n    showAddPersonUIState,\r\n    showEditPersonUIState,\r\n    backgroundState,\r\n    currentPersonID,\r\n    setCurrentPersonID,\r\n  } = useContext(AppContext);\r\n  const [showAddPersonUI, setShowAddPersonUI] = showAddPersonUIState;\r\n  const [showEditPersonUI, setShowEditPersonUI] = showEditPersonUIState;\r\n  const [showBackground, setShowBackground] = backgroundState;\r\n\r\n  const handleBackground = (e) => {\r\n    if (currentPersonID || showAddPersonUI || showEditPersonUI) {\r\n      e.stopPropagation();\r\n      setShowBackground(false);\r\n      setShowEditPersonUI(false);\r\n      setShowAddPersonUI(false);\r\n      setCurrentPersonID(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showBackground\r\n      ? (document.body.style.overflow = 'hidden')\r\n      : (document.body.style.overflow = 'initial');\r\n  }, [showBackground]);\r\n\r\n  const className = showBackground\r\n    ? 'dark-background dark-background--visible'\r\n    : 'dark-background';\r\n    \r\n  return <div className={className} onClick={handleBackground}></div>;\r\n}\r\n\r\nexport default DarkBackground;\r\n","import React from 'react';\r\nimport PeopleListContext from \"../context/PeopleListContext/PeopleListContext\";\r\nfunction PeopleListProvider(props) {\r\n  const [peopleList, setPeopleList] = React.useState([]);\r\n  return <PeopleListContext.Provider value={[peopleList, setPeopleList]} {...props} />;\r\n}\r\n\r\nexport default PeopleListProvider;\r\n","import { getDataFromIDBStore } from './IndexedDB/indexedDBManagement';\r\n\r\nasync function getData(database, version, store) {\r\n  try {\r\n    const data = await getDataFromIDBStore(database, version, store);\r\n    return data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default getData;\r\n","import getData from './data';\r\n\r\nasync function defaultState() {\r\n  const people = await getData('userDatabase', '1', 'people');\r\n  const defaultState = {\r\n    people: people,\r\n    isNotificationOpen: false,\r\n    notificationContext: '',\r\n  };\r\n  return defaultState;\r\n}\r\n\r\nexport default defaultState;\r\n","export const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PERSON':\r\n      return {\r\n        ...state,\r\n        people: action.payload,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'Person has been added.',\r\n      };\r\n\r\n    case 'REMOVE_PERSON': {\r\n      return {\r\n        ...state,\r\n        people: action.payload.people,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'Person has been deleted.',\r\n      };\r\n    }\r\n    case 'REMOVE_MODAL': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: false,\r\n        notificationContent: '',\r\n      };\r\n    }\r\n    case 'INVALID_NAME': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'Name input must include at least one character.',\r\n      };\r\n    }\r\n    case 'INVALID_DATE': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent:\r\n          'Please provide correct date format, (yyyy/mm/dd), or (dd/mm/yyyy) with any date seperators.',\r\n      };\r\n    }\r\n\r\n    case 'INVALID_DAY': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'Day value must be between 1 and 31 (inclusive).',\r\n      };\r\n    }\r\n    case 'INVALID_MONTH': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent:\r\n          'Month value must be between 1 and 12 (inclusive).',\r\n      };\r\n    }\r\n    case 'INVALID_YEAR': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent:\r\n          'Year value must be between 1000 and current year (inclusive).',\r\n      };\r\n    }\r\n    case 'SORT_PEOPLE_BY_AGE': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'SORT BY AGE',\r\n      };\r\n    }\r\n    case 'SORT_PEOPLE_BY_MONTH': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'SORT BY MONTH',\r\n      };\r\n    }\r\n    case 'SORT_PEOPLE_BY_NAME': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: 'SORT BY NAME',\r\n      };\r\n    }\r\n    case 'FILTER_PEOPLE_BY_NAME': {\r\n      return {\r\n        ...state,\r\n        people: action.payload,\r\n        isNotificationOpen: false,\r\n        notificationContent: '',\r\n      };\r\n    }\r\n    case 'INITIAL_LOAD': {\r\n      return {\r\n        ...state,\r\n        people: action.payload.people,\r\n        isNotificationOpen: false,\r\n        notificationContent: '',\r\n      };\r\n    }\r\n    case 'INVALID_FILE_TYPE': {\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent:\r\n          'Invalid file type. Please provide \".jpeg\", or \".png\" file for the picture.',\r\n      };\r\n    }\r\n    case 'ADD_FAVOURITE': {\r\n      const personName = action.payload.name;\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: `${personName} has been added to your favorites.`,\r\n        people: action.payload.people,\r\n      };\r\n    }\r\n    case 'REMOVE_FAVOURITE': {\r\n      const personName = action.payload.name;\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: `${personName} has been removed from your favorites.`,\r\n        people: action.payload.people,\r\n      };\r\n    }\r\n    case 'EDIT_PERSON': {\r\n      const personName = action.payload.name;\r\n      return {\r\n        ...state,\r\n        isNotificationOpen: true,\r\n        notificationContent: `${personName}'s information has been changed.`,\r\n        people: action.payload.people,\r\n      };\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n};\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport { AppContext } from '../context/AppContext/AppContext';\r\nimport defaultState from '../utils/defaultState';\r\nimport { reducer } from '../utils/reducer';\r\n\r\nfunction AppProvider(props) {\r\n  // Default state.\r\n  const def = {\r\n    people: [],\r\n    isNotificationOpen: false,\r\n    notificationContent: '',\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, def);\r\n  const [currentPersonID, setCurrentPersonID] = useState(null);\r\n  const showAddPersonUIState = useState(false);\r\n  const showEditPersonUIState = useState(false);\r\n  const backgroundState = useState(false);\r\n  const favState = useState(false);\r\n  const sortingState = useState('sortByName');\r\n  const getInitialData = async () => {\r\n    const data = await defaultState();\r\n    const people = data.people;\r\n\r\n    dispatch({\r\n      type: 'INITIAL_LOAD',\r\n      payload: { people: people },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInitialData();\r\n  }, []);\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n        favState,\r\n        backgroundState,\r\n        showAddPersonUIState,\r\n        showEditPersonUIState,\r\n        currentPersonID,\r\n        setCurrentPersonID,\r\n        sortingState,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AppProvider;\r\n","import React, { useState } from 'react';\r\nimport ScreenContext from \"../context/ScreenContext/ScreenContext\"\r\n\r\nfunction ScreenProvider(props) {\r\n  const [isScreenLarge, setIsScreenLarge] = useState(false);\r\n\r\n  return (\r\n    <ScreenContext.Provider\r\n      value={[isScreenLarge, setIsScreenLarge]}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ScreenProvider;\r\n\r\n","import AppHead from '../AppHead/AppHead';\r\nimport HomeMain from '../HomeMain/HomeMain';\r\nimport MobileNav from '../MobileNav/MobileNav';\r\nimport DarkBackground from '../DarkBackground/DarkBackground';\r\nimport PeopleListProvider from '../../providers/PeopleListProvider';\r\nimport AppProvider from '../../providers/AppProvider';\r\nimport ScreenProvider from '../../providers/ScreenProvider';\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <AppProvider>\r\n        <DarkBackground />\r\n        <PeopleListProvider>\r\n          <ScreenProvider>\r\n            <AppHead />\r\n            <HomeMain />\r\n          </ScreenProvider>\r\n          <MobileNav />\r\n        </PeopleListProvider>\r\n      </AppProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}